const _isIE11 = typeof window === 'undefined' ? false : !!window.MSInputMethodContext && !!document.documentMode;
const isEdge = typeof navigator === 'undefined' || /Edge\/\d./i.test(navigator.userAgent);
const needsES5 = typeof ReadableStream === 'undefined' || typeof Promise['allSettled'] === 'undefined';
export let pdfjsVersion = '2.12.414';
export let pdfjsBleedingEdgeVersion = '2.12.419';
export function getVersionSuffix(folder) {
    if (folder && folder.includes('bleeding-edge')) {
        return pdfjsBleedingEdgeVersion;
    }
    return pdfjsVersion;
}
export let pdfDefaultOptions = {
    cursorToolOnLoad: 0,
    defaultUrl: '',
    defaultZoomValue: undefined,
    disableHistory: false,
    disablePageLabels: false,
    enablePrintAutoRotate: false,
    enableWebGL: false,
    eventBusDispatchToDOM: false,
    externalLinkRel: 'noopener noreferrer nofollow',
    externalLinkTarget: 0,
    historyUpdateUrl: false,
    ignoreDestinationZoom: false,
    imageResourcesPath: './images/',
    maxCanvasPixels: 16777216,
    pdfBugEnabled: false,
    rangeChunkSize: 65536,
    removePageBorders: false,
    renderer: 'canvas',
    renderInteractiveForms: true,
    renderForms: true,
    enableXfa: true,
    sidebarViewOnLoad: -1,
    scrollModeOnLoad: -1,
    spreadModeOnLoad: -1,
    textLayerMode: 2,
    useOnlyCssZoom: false,
    viewOnLoad: 0,
    cMapPacked: true,
    cMapUrl: () => `./${pdfDefaultOptions.assetsFolder}/cmaps/`,
    disableAutoFetch: false,
    disableCreateObjectURL: false,
    disableFontFace: false,
    disableRange: false,
    disableStream: false,
    isEvalSupported: true,
    maxImageSize: -1,
    pdfBug: false,
    postMessageTransfers: true,
    verbosity: 1,
    workerPort: null,
    assetsFolder: 'assets',
    sandboxBundleSrc: () => _isIE11 || isEdge || needsES5
        ? './' + pdfDefaultOptions.assetsFolder + '/pdf.sandbox-' + getVersionSuffix(pdfDefaultOptions.assetsFolder) + '-es5.js'
        : './' + pdfDefaultOptions.assetsFolder + '/pdf.sandbox-' + getVersionSuffix(pdfDefaultOptions.assetsFolder) + '.js',
    workerSrc: () => _isIE11 || isEdge || needsES5
        ? './' + pdfDefaultOptions.assetsFolder + '/pdf.worker-' + getVersionSuffix(pdfDefaultOptions.assetsFolder) + '-es5.js'
        : './' + pdfDefaultOptions.assetsFolder + '/pdf.worker-' + getVersionSuffix(pdfDefaultOptions.assetsFolder) + '.js',
    // options specific to ngx-extended-pdf-viewer (as opposed to being used by pdf.js)
    doubleTapZoomFactor: 'page-width',
    enableScripting: true,
    defaultCacheSize: 50
};
if (typeof window !== 'undefined') {
    if (window.pdfDefaultOptions) {
        pdfDefaultOptions = window.pdfDefaultOptions;
    }
    else {
        window.pdfDefaultOptions = pdfDefaultOptions;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGRmLWRlZmF1bHQtb3B0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1leHRlbmRlZC1wZGYtdmlld2VyL3NyYy9saWIvb3B0aW9ucy9wZGYtZGVmYXVsdC1vcHRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sT0FBTyxHQUFHLE9BQU8sTUFBTSxLQUFLLFdBQVcsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQU8sTUFBTyxDQUFDLG9CQUFvQixJQUFJLENBQUMsQ0FBTyxRQUFTLENBQUMsWUFBWSxDQUFDO0FBQy9ILE1BQU0sTUFBTSxHQUFHLE9BQU8sU0FBUyxLQUFLLFdBQVcsSUFBSSxZQUFZLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUMxRixNQUFNLFFBQVEsR0FBRyxPQUFPLGNBQWMsS0FBSyxXQUFXLElBQUksT0FBTyxPQUFPLENBQUMsWUFBWSxDQUFDLEtBQUssV0FBVyxDQUFDO0FBRXZHLE1BQU0sQ0FBQyxJQUFJLFlBQVksR0FBRyxVQUFVLENBQUM7QUFDckMsTUFBTSxDQUFDLElBQUksd0JBQXdCLEdBQUcsVUFBVSxDQUFDO0FBQ2pELE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxNQUFjO0lBQzdDLElBQUksTUFBTSxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLEVBQUU7UUFDOUMsT0FBTyx3QkFBd0IsQ0FBQztLQUNqQztJQUNELE9BQU8sWUFBWSxDQUFDO0FBQ3RCLENBQUM7QUFFRCxNQUFNLENBQUMsSUFBSSxpQkFBaUIsR0FBRztJQUM3QixnQkFBZ0IsRUFBRSxDQUFDO0lBQ25CLFVBQVUsRUFBRSxFQUFFO0lBQ2QsZ0JBQWdCLEVBQUUsU0FBUztJQUMzQixjQUFjLEVBQUUsS0FBSztJQUNyQixpQkFBaUIsRUFBRSxLQUFLO0lBQ3hCLHFCQUFxQixFQUFFLEtBQUs7SUFDNUIsV0FBVyxFQUFFLEtBQUs7SUFDbEIscUJBQXFCLEVBQUUsS0FBSztJQUM1QixlQUFlLEVBQUUsOEJBQThCO0lBQy9DLGtCQUFrQixFQUFFLENBQUM7SUFDckIsZ0JBQWdCLEVBQUUsS0FBSztJQUN2QixxQkFBcUIsRUFBRSxLQUFLO0lBQzVCLGtCQUFrQixFQUFFLFdBQVc7SUFDL0IsZUFBZSxFQUFFLFFBQVE7SUFDekIsYUFBYSxFQUFFLEtBQUs7SUFDcEIsY0FBYyxFQUFFLEtBQUs7SUFDckIsaUJBQWlCLEVBQUUsS0FBSztJQUN4QixRQUFRLEVBQUUsUUFBUTtJQUNsQixzQkFBc0IsRUFBRSxJQUFJO0lBQzVCLFdBQVcsRUFBRSxJQUFJO0lBQ2pCLFNBQVMsRUFBRSxJQUFJO0lBQ2YsaUJBQWlCLEVBQUUsQ0FBQyxDQUFDO0lBQ3JCLGdCQUFnQixFQUFFLENBQUMsQ0FBQztJQUNwQixnQkFBZ0IsRUFBRSxDQUFDLENBQUM7SUFDcEIsYUFBYSxFQUFFLENBQUM7SUFDaEIsY0FBYyxFQUFFLEtBQUs7SUFDckIsVUFBVSxFQUFFLENBQUM7SUFDYixVQUFVLEVBQUUsSUFBSTtJQUNoQixPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsS0FBSyxpQkFBaUIsQ0FBQyxZQUFZLFNBQVM7SUFDM0QsZ0JBQWdCLEVBQUUsS0FBSztJQUN2QixzQkFBc0IsRUFBRSxLQUFLO0lBQzdCLGVBQWUsRUFBRSxLQUFLO0lBQ3RCLFlBQVksRUFBRSxLQUFLO0lBQ25CLGFBQWEsRUFBRSxLQUFLO0lBQ3BCLGVBQWUsRUFBRSxJQUFJO0lBQ3JCLFlBQVksRUFBRSxDQUFDLENBQUM7SUFDaEIsTUFBTSxFQUFFLEtBQUs7SUFDYixvQkFBb0IsRUFBRSxJQUFJO0lBQzFCLFNBQVMsRUFBRSxDQUFDO0lBQ1osVUFBVSxFQUFFLElBQUk7SUFDaEIsWUFBWSxFQUFFLFFBQVE7SUFDdEIsZ0JBQWdCLEVBQUUsR0FBRyxFQUFFLENBQ3JCLE9BQU8sSUFBSSxNQUFNLElBQUksUUFBUTtRQUMzQixDQUFDLENBQUMsSUFBSSxHQUFHLGlCQUFpQixDQUFDLFlBQVksR0FBRyxlQUFlLEdBQUcsZ0JBQWdCLENBQUMsaUJBQWlCLENBQUMsWUFBWSxDQUFDLEdBQUcsU0FBUztRQUN4SCxDQUFDLENBQUMsSUFBSSxHQUFHLGlCQUFpQixDQUFDLFlBQVksR0FBRyxlQUFlLEdBQUcsZ0JBQWdCLENBQUMsaUJBQWlCLENBQUMsWUFBWSxDQUFDLEdBQUcsS0FBSztJQUN4SCxTQUFTLEVBQUUsR0FBRyxFQUFFLENBQ2QsT0FBTyxJQUFJLE1BQU0sSUFBSSxRQUFRO1FBQzNCLENBQUMsQ0FBQyxJQUFJLEdBQUcsaUJBQWlCLENBQUMsWUFBWSxHQUFHLGNBQWMsR0FBRyxnQkFBZ0IsQ0FBQyxpQkFBaUIsQ0FBQyxZQUFZLENBQUMsR0FBRyxTQUFTO1FBQ3ZILENBQUMsQ0FBQyxJQUFJLEdBQUcsaUJBQWlCLENBQUMsWUFBWSxHQUFHLGNBQWMsR0FBRyxnQkFBZ0IsQ0FBQyxpQkFBaUIsQ0FBQyxZQUFZLENBQUMsR0FBRyxLQUFLO0lBRXZILG1GQUFtRjtJQUNuRixtQkFBbUIsRUFBRSxZQUFZO0lBQ2pDLGVBQWUsRUFBRSxJQUFJO0lBQ3JCLGdCQUFnQixFQUFFLEVBQUU7Q0FDckIsQ0FBQztBQUVGLElBQUksT0FBTyxNQUFNLEtBQUssV0FBVyxFQUFFO0lBQ2pDLElBQVUsTUFBTyxDQUFDLGlCQUFpQixFQUFFO1FBQ25DLGlCQUFpQixHQUFTLE1BQU8sQ0FBQyxpQkFBaUIsQ0FBQztLQUNyRDtTQUFNO1FBQ0MsTUFBTyxDQUFDLGlCQUFpQixHQUFHLGlCQUFpQixDQUFDO0tBQ3JEO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBfaXNJRTExID0gdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgPyBmYWxzZSA6ICEhKDxhbnk+d2luZG93KS5NU0lucHV0TWV0aG9kQ29udGV4dCAmJiAhISg8YW55PmRvY3VtZW50KS5kb2N1bWVudE1vZGU7XG5jb25zdCBpc0VkZ2UgPSB0eXBlb2YgbmF2aWdhdG9yID09PSAndW5kZWZpbmVkJyB8fCAvRWRnZVxcL1xcZC4vaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xuY29uc3QgbmVlZHNFUzUgPSB0eXBlb2YgUmVhZGFibGVTdHJlYW0gPT09ICd1bmRlZmluZWQnIHx8IHR5cGVvZiBQcm9taXNlWydhbGxTZXR0bGVkJ10gPT09ICd1bmRlZmluZWQnO1xuXG5leHBvcnQgbGV0IHBkZmpzVmVyc2lvbiA9ICcyLjEyLjQxNCc7XG5leHBvcnQgbGV0IHBkZmpzQmxlZWRpbmdFZGdlVmVyc2lvbiA9ICcyLjEyLjQxOSc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0VmVyc2lvblN1ZmZpeChmb2xkZXI6IHN0cmluZyk6IHN0cmluZyB7XG4gIGlmIChmb2xkZXIgJiYgZm9sZGVyLmluY2x1ZGVzKCdibGVlZGluZy1lZGdlJykpIHtcbiAgICByZXR1cm4gcGRmanNCbGVlZGluZ0VkZ2VWZXJzaW9uO1xuICB9XG4gIHJldHVybiBwZGZqc1ZlcnNpb247XG59XG5cbmV4cG9ydCBsZXQgcGRmRGVmYXVsdE9wdGlvbnMgPSB7XG4gIGN1cnNvclRvb2xPbkxvYWQ6IDAsXG4gIGRlZmF1bHRVcmw6ICcnLFxuICBkZWZhdWx0Wm9vbVZhbHVlOiB1bmRlZmluZWQsXG4gIGRpc2FibGVIaXN0b3J5OiBmYWxzZSxcbiAgZGlzYWJsZVBhZ2VMYWJlbHM6IGZhbHNlLFxuICBlbmFibGVQcmludEF1dG9Sb3RhdGU6IGZhbHNlLFxuICBlbmFibGVXZWJHTDogZmFsc2UsXG4gIGV2ZW50QnVzRGlzcGF0Y2hUb0RPTTogZmFsc2UsXG4gIGV4dGVybmFsTGlua1JlbDogJ25vb3BlbmVyIG5vcmVmZXJyZXIgbm9mb2xsb3cnLFxuICBleHRlcm5hbExpbmtUYXJnZXQ6IDAsXG4gIGhpc3RvcnlVcGRhdGVVcmw6IGZhbHNlLFxuICBpZ25vcmVEZXN0aW5hdGlvblpvb206IGZhbHNlLFxuICBpbWFnZVJlc291cmNlc1BhdGg6ICcuL2ltYWdlcy8nLFxuICBtYXhDYW52YXNQaXhlbHM6IDE2Nzc3MjE2LFxuICBwZGZCdWdFbmFibGVkOiBmYWxzZSxcbiAgcmFuZ2VDaHVua1NpemU6IDY1NTM2LFxuICByZW1vdmVQYWdlQm9yZGVyczogZmFsc2UsXG4gIHJlbmRlcmVyOiAnY2FudmFzJyxcbiAgcmVuZGVySW50ZXJhY3RpdmVGb3JtczogdHJ1ZSwgLy8gcmVuYW1lZCAtIHVudGlsIHBkZi5qcyAyLjEwXG4gIHJlbmRlckZvcm1zOiB0cnVlLCAvLyByZW5hbWVkIC0gc2luY2UgcGRmLmpzIDIuMTFcbiAgZW5hYmxlWGZhOiB0cnVlLFxuICBzaWRlYmFyVmlld09uTG9hZDogLTEsXG4gIHNjcm9sbE1vZGVPbkxvYWQ6IC0xLFxuICBzcHJlYWRNb2RlT25Mb2FkOiAtMSxcbiAgdGV4dExheWVyTW9kZTogMixcbiAgdXNlT25seUNzc1pvb206IGZhbHNlLFxuICB2aWV3T25Mb2FkOiAwLFxuICBjTWFwUGFja2VkOiB0cnVlLFxuICBjTWFwVXJsOiAoKSA9PiBgLi8ke3BkZkRlZmF1bHRPcHRpb25zLmFzc2V0c0ZvbGRlcn0vY21hcHMvYCxcbiAgZGlzYWJsZUF1dG9GZXRjaDogZmFsc2UsXG4gIGRpc2FibGVDcmVhdGVPYmplY3RVUkw6IGZhbHNlLFxuICBkaXNhYmxlRm9udEZhY2U6IGZhbHNlLFxuICBkaXNhYmxlUmFuZ2U6IGZhbHNlLFxuICBkaXNhYmxlU3RyZWFtOiBmYWxzZSxcbiAgaXNFdmFsU3VwcG9ydGVkOiB0cnVlLFxuICBtYXhJbWFnZVNpemU6IC0xLFxuICBwZGZCdWc6IGZhbHNlLFxuICBwb3N0TWVzc2FnZVRyYW5zZmVyczogdHJ1ZSxcbiAgdmVyYm9zaXR5OiAxLFxuICB3b3JrZXJQb3J0OiBudWxsLFxuICBhc3NldHNGb2xkZXI6ICdhc3NldHMnLFxuICBzYW5kYm94QnVuZGxlU3JjOiAoKSA9PlxuICAgIF9pc0lFMTEgfHwgaXNFZGdlIHx8IG5lZWRzRVM1XG4gICAgICA/ICcuLycgKyBwZGZEZWZhdWx0T3B0aW9ucy5hc3NldHNGb2xkZXIgKyAnL3BkZi5zYW5kYm94LScgKyBnZXRWZXJzaW9uU3VmZml4KHBkZkRlZmF1bHRPcHRpb25zLmFzc2V0c0ZvbGRlcikgKyAnLWVzNS5qcydcbiAgICAgIDogJy4vJyArIHBkZkRlZmF1bHRPcHRpb25zLmFzc2V0c0ZvbGRlciArICcvcGRmLnNhbmRib3gtJyArIGdldFZlcnNpb25TdWZmaXgocGRmRGVmYXVsdE9wdGlvbnMuYXNzZXRzRm9sZGVyKSArICcuanMnLFxuICB3b3JrZXJTcmM6ICgpID0+XG4gICAgX2lzSUUxMSB8fCBpc0VkZ2UgfHwgbmVlZHNFUzVcbiAgICAgID8gJy4vJyArIHBkZkRlZmF1bHRPcHRpb25zLmFzc2V0c0ZvbGRlciArICcvcGRmLndvcmtlci0nICsgZ2V0VmVyc2lvblN1ZmZpeChwZGZEZWZhdWx0T3B0aW9ucy5hc3NldHNGb2xkZXIpICsgJy1lczUuanMnXG4gICAgICA6ICcuLycgKyBwZGZEZWZhdWx0T3B0aW9ucy5hc3NldHNGb2xkZXIgKyAnL3BkZi53b3JrZXItJyArIGdldFZlcnNpb25TdWZmaXgocGRmRGVmYXVsdE9wdGlvbnMuYXNzZXRzRm9sZGVyKSArICcuanMnLFxuXG4gIC8vIG9wdGlvbnMgc3BlY2lmaWMgdG8gbmd4LWV4dGVuZGVkLXBkZi12aWV3ZXIgKGFzIG9wcG9zZWQgdG8gYmVpbmcgdXNlZCBieSBwZGYuanMpXG4gIGRvdWJsZVRhcFpvb21GYWN0b3I6ICdwYWdlLXdpZHRoJyxcbiAgZW5hYmxlU2NyaXB0aW5nOiB0cnVlLFxuICBkZWZhdWx0Q2FjaGVTaXplOiA1MFxufTtcblxuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gIGlmICgoPGFueT53aW5kb3cpLnBkZkRlZmF1bHRPcHRpb25zKSB7XG4gICAgcGRmRGVmYXVsdE9wdGlvbnMgPSAoPGFueT53aW5kb3cpLnBkZkRlZmF1bHRPcHRpb25zO1xuICB9IGVsc2Uge1xuICAgICg8YW55PndpbmRvdykucGRmRGVmYXVsdE9wdGlvbnMgPSBwZGZEZWZhdWx0T3B0aW9ucztcbiAgfVxufVxuIl19