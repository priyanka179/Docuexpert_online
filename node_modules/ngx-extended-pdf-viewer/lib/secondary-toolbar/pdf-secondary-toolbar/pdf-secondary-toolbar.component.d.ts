import { OnInit, EventEmitter, OnChanges, SimpleChanges, TemplateRef, ElementRef, AfterViewInit } from '@angular/core';
import { PDFNotificationService } from './../../pdf-notification-service';
import * as i0 from "@angular/core";
export declare class PdfSecondaryToolbarComponent implements OnInit, OnChanges, AfterViewInit {
    private element;
    notificationService: PDFNotificationService;
    customSecondaryToolbar: TemplateRef<any>;
    secondaryToolbarTop: any;
    mobileFriendlyZoomScale: number;
    showPresentationModeButton: boolean;
    showOpenFileButton: boolean;
    showPrintButton: boolean;
    showDownloadButton: boolean;
    showBookmarkButton: boolean;
    showPagingButtons: boolean;
    showRotateButton: boolean;
    showHandToolButton: boolean;
    showScrollingButton: boolean;
    showSpreadButton: boolean;
    showPropertiesButton: boolean;
    spreadChange: EventEmitter<"off" | "even" | "odd">;
    secondaryMenuIsEmpty: EventEmitter<boolean>;
    disablePreviousPage: boolean;
    disableNextPage: boolean;
    showPageScrollMode: boolean;
    constructor(element: ElementRef, notificationService: PDFNotificationService);
    onPdfJsInit(): void;
    updateUIState(): void;
    onSpreadChange(newSpread: 'off' | 'odd' | 'even'): void;
    ngOnChanges(changes: SimpleChanges): void;
    onResize(): void;
    ngAfterViewInit(): void;
    ngOnInit(): void;
    checkVisibility(): void;
    private checkVisibilityRecursively;
    previousPage(): void;
    nextPage(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PdfSecondaryToolbarComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PdfSecondaryToolbarComponent, "pdf-secondary-toolbar", never, { "customSecondaryToolbar": "customSecondaryToolbar"; "secondaryToolbarTop": "secondaryToolbarTop"; "mobileFriendlyZoomScale": "mobileFriendlyZoomScale"; "showPresentationModeButton": "showPresentationModeButton"; "showOpenFileButton": "showOpenFileButton"; "showPrintButton": "showPrintButton"; "showDownloadButton": "showDownloadButton"; "showBookmarkButton": "showBookmarkButton"; "showPagingButtons": "showPagingButtons"; "showRotateButton": "showRotateButton"; "showHandToolButton": "showHandToolButton"; "showScrollingButton": "showScrollingButton"; "showSpreadButton": "showSpreadButton"; "showPropertiesButton": "showPropertiesButton"; }, { "spreadChange": "spreadChange"; "secondaryMenuIsEmpty": "secondaryMenuIsEmpty"; }, never, never>;
}
