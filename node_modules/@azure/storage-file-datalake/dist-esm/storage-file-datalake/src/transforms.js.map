{"version":3,"file":"transforms.js","sourceRoot":"","sources":["../../../src/transforms.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { URLBuilder } from \"@azure/core-http\";\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { ContainerItem, PublicAccessType as ContainerPublicAccessType } from \"@azure/storage-blob\";\n\nimport { AclFailedEntry, PathGetPropertiesResponse } from \"./generated/src/models\";\nimport {\n  AccessControlChangeError,\n  FileSystemItem,\n  Metadata,\n  PathAccessControlItem,\n  PathGetAccessControlResponse,\n  PathPermissions,\n  PublicAccessType,\n  RemovePathAccessControlItem,\n  RolePermissions,\n  ServiceListContainersSegmentResponse,\n  ServiceListFileSystemsSegmentResponse\n} from \"./models\";\nimport { ToBlobEndpointHostMappings, ToDfsEndpointHostMappings } from \"./utils/constants\";\nimport { base64encode } from \"./utils/utils.common\";\n\n/**\n * Get a blob endpoint URL from incoming blob or dfs endpoint URLs.\n * Only handle known host name pair patterns, add more patterns into ToBlobEndpointHostMappings in constants.ts.\n *\n * Expected input and outputs:\n * http://account.blob.core.windows.net     - http://account.blob.core.windows.net\n * http://account.dfs.core.windows.net      - http://account.blob.core.windows.net\n * http://127.0.0.1:10000                   - http://127.0.0.1:10000\n * http://account.blob.core.windows.net/abc - http://account.blob.core.windows.net/abc\n * http://account.dfs.core.windows.net/abc  - http://account.blob.core.windows.net/abc\n * http://127.0.0.1:10000/abc               - http://127.0.0.1:10000/abc\n *\n * @param url -\n */\nexport function toBlobEndpointUrl(url: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let host = urlParsed.getHost();\n  if (host === undefined) {\n    throw RangeError(`toBlobEndpointUrl() parameter url ${url} doesn't include valid host.`);\n  }\n\n  for (const mapping of ToBlobEndpointHostMappings) {\n    if (host.includes(mapping[0])) {\n      host = host.replace(mapping[0], mapping[1]);\n      break;\n    }\n  }\n\n  urlParsed.setHost(host);\n  return urlParsed.toString();\n}\n\n/**\n * Get a dfs endpoint URL from incoming blob or dfs endpoint URLs.\n * Only handle known host name pair patterns, add more patterns into ToDfsEndpointHostMappings in constants.ts.\n *\n * Expected input and outputs:\n * http://account.blob.core.windows.net     - http://account.dfs.core.windows.net\n * http://account.dfs.core.windows.net      - http://account.dfs.core.windows.net\n * http://127.0.0.1:10000                   - http://127.0.0.1:10000\n * http://account.blob.core.windows.net/abc - http://account.dfs.core.windows.net/abc\n * http://account.dfs.core.windows.net/abc  - http://account.dfs.core.windows.net/abc\n * http://127.0.0.1:10000/abc               - http://127.0.0.1:10000/abc\n *\n * @param url -\n */\nexport function toDfsEndpointUrl(url: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let host = urlParsed.getHost();\n  if (host === undefined) {\n    throw RangeError(`toDfsEndpointUrl() parameter url ${url} doesn't include valid host.`);\n  }\n\n  for (const mapping of ToDfsEndpointHostMappings) {\n    if (host.includes(mapping[0])) {\n      host = host.replace(mapping[0], mapping[1]);\n      break;\n    }\n  }\n\n  urlParsed.setHost(host);\n  return urlParsed.toString();\n}\n\nfunction toFileSystemAsyncIterableIterator(\n  iter: AsyncIterableIterator<ServiceListContainersSegmentResponse>\n): AsyncIterableIterator<ServiceListFileSystemsSegmentResponse> {\n  return {\n    async next() {\n      const rawResult = await iter.next();\n      if (rawResult.value) {\n        rawResult.value.fileSystemItems = rawResult.value.containerItems.map(\n          (val: ContainerItem): FileSystemItem => {\n            return {\n              ...val,\n              versionId: val.version,\n              properties: {\n                ...val.properties,\n                publicAccess: toPublicAccessType(val.properties.publicAccess)\n              }\n            };\n          }\n        );\n      }\n      return rawResult as any;\n    },\n    [Symbol.asyncIterator]() {\n      return this;\n    }\n  };\n}\n\nexport function toFileSystemPagedAsyncIterableIterator(\n  iter: PagedAsyncIterableIterator<ContainerItem, ServiceListContainersSegmentResponse>\n): PagedAsyncIterableIterator<FileSystemItem, ServiceListFileSystemsSegmentResponse> {\n  return {\n    async next(): Promise<{ done?: boolean; value: FileSystemItem }> {\n      const rawResult = await iter.next();\n      const result = rawResult as { done?: boolean; value: FileSystemItem };\n      if (result.value) {\n        result.value.properties.publicAccess = toPublicAccessType(\n          rawResult.value.properties.publicAccess\n        );\n        result.value.versionId = rawResult.value.version;\n      }\n      return result;\n    },\n    [Symbol.asyncIterator](): PagedAsyncIterableIterator<\n      FileSystemItem,\n      ServiceListFileSystemsSegmentResponse\n    > {\n      return this;\n    },\n    byPage(\n      settings: PageSettings = {}\n    ): AsyncIterableIterator<ServiceListFileSystemsSegmentResponse> {\n      return toFileSystemAsyncIterableIterator(iter.byPage(settings));\n    }\n  };\n}\n\nexport function toContainerPublicAccessType(\n  publicAccessType?: PublicAccessType\n): ContainerPublicAccessType | undefined {\n  if (!publicAccessType) {\n    return undefined;\n  }\n\n  switch (publicAccessType) {\n    case \"filesystem\":\n      return \"container\";\n    case \"file\":\n      return \"blob\";\n    default:\n      throw TypeError(\n        `toContainerPublicAccessType() parameter ${publicAccessType} is not recognized.`\n      );\n  }\n}\n\nexport function toPublicAccessType(\n  containerPublicAccessType?: ContainerPublicAccessType\n): PublicAccessType | undefined {\n  if (!containerPublicAccessType) {\n    return undefined;\n  }\n\n  switch (containerPublicAccessType) {\n    case \"container\":\n      return \"filesystem\";\n    case \"blob\":\n      return \"file\";\n    default:\n      throw TypeError(\n        `toPublicAccessType() parameter ${containerPublicAccessType} is not recognized.`\n      );\n  }\n}\n\nexport function toProperties(metadata?: Metadata): string | undefined {\n  if (metadata === undefined) {\n    return undefined;\n  }\n\n  const properties = [];\n  for (const key in metadata) {\n    if (Object.prototype.hasOwnProperty.call(metadata, key)) {\n      const value = metadata[key];\n      properties.push(`${key}=${base64encode(value)}`);\n    }\n  }\n\n  return properties.join(\",\");\n}\n\nexport function toPathGetAccessControlResponse(\n  response: PathGetPropertiesResponse\n): PathGetAccessControlResponse {\n  return {\n    ...response,\n    _response: response._response,\n    permissions: toPermissions(response.permissions),\n    acl: toAcl(response.acl)\n  };\n}\n\nexport function toRolePermissions(\n  permissionsString: string,\n  allowStickyBit: boolean = false\n): RolePermissions {\n  const error = new RangeError(\n    `toRolePermissions() Invalid role permissions string ${permissionsString}`\n  );\n  if (permissionsString.length !== 3) {\n    throw error;\n  }\n\n  permissionsString = permissionsString.toLowerCase();\n\n  let read = false;\n  if (permissionsString[0] === \"r\") {\n    read = true;\n  } else if (permissionsString[0] !== \"-\") {\n    throw error;\n  }\n\n  let write = false;\n  if (permissionsString[1] === \"w\") {\n    write = true;\n  } else if (permissionsString[1] !== \"-\") {\n    throw error;\n  }\n\n  let execute = false;\n  if (permissionsString[2] === \"x\") {\n    execute = true;\n  } else if (allowStickyBit) {\n    if (permissionsString[2] === \"t\") {\n      execute = true;\n    } else if (permissionsString[2] !== \"-\") {\n      throw error;\n    }\n  } else if (permissionsString[2] !== \"-\") {\n    throw error;\n  }\n\n  return { read, write, execute };\n}\n\nexport function toPermissions(permissionsString?: string): PathPermissions | undefined {\n  if (permissionsString === undefined || permissionsString === \"\" || permissionsString === null) {\n    return undefined;\n  }\n\n  if (permissionsString.length !== 9 && permissionsString.length !== 10) {\n    throw RangeError(`toPermissions() Invalid permissions string ${permissionsString}`);\n  }\n\n  // Case insensitive\n  permissionsString = permissionsString.toLowerCase();\n\n  let stickyBit = false;\n  if (permissionsString[8] === \"t\") {\n    stickyBit = true;\n  }\n\n  let extendedAcls = false;\n  if (permissionsString.length === 10) {\n    if (permissionsString[9] === \"+\") {\n      extendedAcls = true;\n    } else {\n      throw RangeError(\n        `toPermissions() Invalid extendedAcls bit ${permissionsString[9]} in permissions string ${permissionsString}`\n      );\n    }\n  }\n\n  const owner = toRolePermissions(permissionsString.substr(0, 3), false);\n  const group = toRolePermissions(permissionsString.substr(3, 3), false);\n  const other = toRolePermissions(permissionsString.substr(6, 3), true);\n\n  return {\n    owner,\n    group,\n    other,\n    stickyBit,\n    extendedAcls\n  };\n}\n\nexport function toAccessControlItem(aclItemString: string): PathAccessControlItem {\n  const error = new RangeError(\n    `toAccessControlItem() Parameter access control item string ${aclItemString} is not valid.`\n  );\n  if (aclItemString === \"\") {\n    throw error;\n  }\n\n  aclItemString = aclItemString.toLowerCase();\n\n  const parts = aclItemString.split(\":\");\n  if (parts.length < 3 || parts.length > 4) {\n    throw error;\n  }\n\n  let defaultScope = false;\n  let index = 0;\n  if (parts.length === 4) {\n    if (parts[index] !== \"default\") {\n      throw error;\n    }\n    defaultScope = true;\n    index++;\n  }\n\n  const accessControlType = parts[index++];\n  if (\n    accessControlType !== \"user\" &&\n    accessControlType !== \"group\" &&\n    accessControlType !== \"mask\" &&\n    accessControlType !== \"other\"\n  ) {\n    throw error;\n  }\n\n  const entityId = parts[index++];\n  const permissions = toRolePermissions(parts[index++]);\n\n  return {\n    defaultScope,\n    accessControlType,\n    entityId,\n    permissions\n  };\n}\n\nexport function toRemoveAccessControlItem(aclItemString: string): RemovePathAccessControlItem {\n  const error = new RangeError(\n    `toAccessControlItem() Parameter access control item string \"${aclItemString}\" is not valid.`\n  );\n  if (aclItemString === \"\") {\n    throw error;\n  }\n\n  aclItemString = aclItemString.toLowerCase();\n\n  const parts = aclItemString.split(\":\");\n  if (parts.length < 1 || parts.length > 3) {\n    throw error;\n  }\n\n  if (parts.length === 3) {\n    if (parts[0] !== \"default\") {\n      throw error;\n    }\n  }\n\n  let defaultScope = false;\n  let index = 0;\n  if (parts[index] === \"default\") {\n    defaultScope = true;\n    index++;\n  }\n\n  const accessControlType = parts[index++];\n  if (\n    accessControlType !== \"user\" &&\n    accessControlType !== \"group\" &&\n    accessControlType !== \"mask\" &&\n    accessControlType !== \"other\"\n  ) {\n    throw error;\n  }\n\n  const entityId = parts[index++];\n\n  return {\n    defaultScope,\n    accessControlType,\n    entityId\n  };\n}\n\nexport function toAcl(aclString?: string): PathAccessControlItem[] {\n  if (aclString === undefined || aclString === \"\" || aclString === null) {\n    return [];\n  }\n\n  const acls = [];\n  const aclParts = aclString.split(\",\");\n  for (const aclPart of aclParts) {\n    acls.push(toAccessControlItem(aclPart));\n  }\n\n  return acls;\n}\n\nexport function toRemoveAcl(aclString?: string): RemovePathAccessControlItem[] {\n  if (aclString === undefined || aclString === \"\" || aclString === null) {\n    return [];\n  }\n\n  const acls = [];\n  const aclParts = aclString.split(\",\");\n  for (const aclPart of aclParts) {\n    acls.push(toRemoveAccessControlItem(aclPart));\n  }\n\n  return acls;\n}\n\nexport function toAccessControlItemString(item: PathAccessControlItem): string {\n  const entityIdString = item.entityId !== undefined ? `:${item.entityId}` : \"\";\n  const permissionsString =\n    item.permissions !== undefined ? `:${toRolePermissionsString(item.permissions)}` : \"\";\n  return `${item.defaultScope ? \"default:\" : \"\"}${\n    item.accessControlType\n  }${entityIdString}${permissionsString}`;\n}\n\nexport function toAclString(acl: PathAccessControlItem[]): string {\n  return acl.map(toAccessControlItemString).join(\",\");\n}\n\nexport function toRolePermissionsString(p: RolePermissions, stickyBit: boolean = false): string {\n  return `${p.read ? \"r\" : \"-\"}${p.write ? \"w\" : \"-\"}${stickyBit ? \"t\" : p.execute ? \"x\" : \"-\"}`;\n}\n\nexport function toPermissionsString(permissions: PathPermissions): string {\n  return `${toRolePermissionsString(permissions.owner)}${toRolePermissionsString(\n    permissions.group\n  )}${toRolePermissionsString(permissions.other, permissions.stickyBit)}${\n    permissions.extendedAcls ? \"+\" : \"\"\n  }`;\n}\n\nexport function toAccessControlChangeFailureArray(\n  aclFailedEntries: AclFailedEntry[] = []\n): AccessControlChangeError[] {\n  return aclFailedEntries.map((aclFailedEntry: AclFailedEntry) => {\n    return {\n      name: aclFailedEntry.name || \"\",\n      isDirectory: (aclFailedEntry.type || \"\").toLowerCase() === \"directory\",\n      message: aclFailedEntry.errorMessage || \"\"\n    };\n  });\n}\n"]}