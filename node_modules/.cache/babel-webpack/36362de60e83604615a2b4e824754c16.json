{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, HostListener, NgModule } from '@angular/core';\nconst _c0 = [\"ripple\", \"\"];\nconst _c1 = [\"*\"];\n\nclass NgxRippleComponent {\n  constructor(element, renderer) {\n    this.element = element;\n    this.renderer = renderer;\n    this.initialPosition = '';\n    this.initialOverflow = '';\n  }\n\n  onClick(event) {\n    this.initialPosition = this.element.nativeElement.style.position;\n    this.initialOverflow = this.element.nativeElement.style.overflow;\n    this.element.nativeElement.style.position = 'relative';\n    this.element.nativeElement.style.overflow = 'hidden';\n    this.createChild(event);\n  }\n\n  createChild(event) {\n    const span = this.renderer.createElement('span');\n    this.renderer.addClass(span, 'ripple');\n    const bounds = this.element.nativeElement.getBoundingClientRect(); // Get position on X Axis\n\n    const x = event.clientX - bounds.left; // Get position on Y Axis\n\n    const y = event.clientY - bounds.top;\n    this.renderer.setStyle(span, 'left', `${x}px`);\n    this.renderer.setStyle(span, 'top', `${y}px`);\n    this.renderer.appendChild(this.element.nativeElement, span);\n    this.removeChild(span);\n  }\n\n  removeChild(childElement) {\n    setTimeout(() => {\n      this.renderer.removeChild(this.element.nativeElement, childElement);\n      this.element.nativeElement.style.position = this.initialPosition;\n      this.element.nativeElement.style.overflow = this.initialOverflow;\n    }, 300);\n  }\n\n}\n\nNgxRippleComponent.ɵfac = function NgxRippleComponent_Factory(t) {\n  return new (t || NgxRippleComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nNgxRippleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxRippleComponent,\n  selectors: [[\"\", \"ripple\", \"\"]],\n  hostBindings: function NgxRippleComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function NgxRippleComponent_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  },\n  exportAs: [\"ripple\"],\n  attrs: _c0,\n  ngContentSelectors: _c1,\n  decls: 1,\n  vars: 0,\n  template: function NgxRippleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  styles: [\"@keyframes ripple-effect {\\n      from {\\n        opacity: 1;\\n        transform: scale(0);\\n      }\\n      to {\\n        opacity: 0;\\n        transform: scale(10);\\n      }\\n    }\\n    .ripple[_ngcontent-%COMP%] {\\n      position: absolute;\\n      \\n      border-radius: 50%;\\n      background-color: rgba(0, 0, 0, 0.3);\\n      width: 100px;\\n      height: 100px;\\n      margin-top: -50px;\\n      margin-left: -50px;\\n      animation: ripple-effect 1s;\\n      opacity: 0;\\n    }\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxRippleComponent, [{\n    type: Component,\n    args: [{\n      selector: '[ripple]',\n      template: '<ng-content></ng-content>',\n      styles: [`\n    /* Add animation */\n    @keyframes ripple-effect {\n      from {\n        opacity: 1;\n        transform: scale(0);\n      }\n      to {\n        opacity: 0;\n        transform: scale(10);\n      }\n    }\n    .ripple {\n      position: absolute;\n      /* ripple effect should be in round shape */\n      border-radius: 50%;\n      background-color: rgba(0, 0, 0, 0.3);\n      width: 100px;\n      height: 100px;\n      margin-top: -50px;\n      margin-left: -50px;\n      animation: ripple-effect 1s;\n      opacity: 0;\n    }\n  `],\n      exportAs: 'ripple'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n\nclass NgxRippleModule {}\n\nNgxRippleModule.ɵfac = function NgxRippleModule_Factory(t) {\n  return new (t || NgxRippleModule)();\n};\n\nNgxRippleModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxRippleModule\n});\nNgxRippleModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxRippleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [NgxRippleComponent],\n      exports: [NgxRippleComponent]\n    }]\n  }], null, null);\n})();\n/*\r\n * Public API Surface of ngx-ripple\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { NgxRippleComponent, NgxRippleModule }; //# sourceMappingURL=ngx-ripple-effect.js.map","map":{"version":3,"sources":["F:/statvalu/project/AR_DocuExpert_Test/node_modules/ngx-ripple-effect/fesm2015/ngx-ripple-effect.js"],"names":["i0","Component","HostListener","NgModule","NgxRippleComponent","constructor","element","renderer","initialPosition","initialOverflow","onClick","event","nativeElement","style","position","overflow","createChild","span","createElement","addClass","bounds","getBoundingClientRect","x","clientX","left","y","clientY","top","setStyle","appendChild","removeChild","childElement","setTimeout","ɵfac","ElementRef","Renderer2","ɵcmp","type","args","selector","template","styles","exportAs","NgxRippleModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, HostListener, NgModule } from '@angular/core';\n\nclass NgxRippleComponent {\r\n    constructor(element, renderer) {\r\n        this.element = element;\r\n        this.renderer = renderer;\r\n        this.initialPosition = '';\r\n        this.initialOverflow = '';\r\n    }\r\n    onClick(event) {\r\n        this.initialPosition = this.element.nativeElement.style.position;\r\n        this.initialOverflow = this.element.nativeElement.style.overflow;\r\n        this.element.nativeElement.style.position = 'relative';\r\n        this.element.nativeElement.style.overflow = 'hidden';\r\n        this.createChild(event);\r\n    }\r\n    createChild(event) {\r\n        const span = this.renderer.createElement('span');\r\n        this.renderer.addClass(span, 'ripple');\r\n        const bounds = this.element.nativeElement.getBoundingClientRect();\r\n        // Get position on X Axis\r\n        const x = event.clientX - bounds.left;\r\n        // Get position on Y Axis\r\n        const y = event.clientY - bounds.top;\r\n        this.renderer.setStyle(span, 'left', `${x}px`);\r\n        this.renderer.setStyle(span, 'top', `${y}px`);\r\n        this.renderer.appendChild(this.element.nativeElement, span);\r\n        this.removeChild(span);\r\n    }\r\n    removeChild(childElement) {\r\n        setTimeout(() => {\r\n            this.renderer.removeChild(this.element.nativeElement, childElement);\r\n            this.element.nativeElement.style.position = this.initialPosition;\r\n            this.element.nativeElement.style.overflow = this.initialOverflow;\r\n        }, 300);\r\n    }\r\n}\r\nNgxRippleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.7\", ngImport: i0, type: NgxRippleComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\r\nNgxRippleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.7\", type: NgxRippleComponent, selector: \"[ripple]\", host: { listeners: { \"click\": \"onClick($event)\" } }, exportAs: [\"ripple\"], ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\"\\n    /* Add animation */\\n    @keyframes ripple-effect {\\n      from {\\n        opacity: 1;\\n        transform: scale(0);\\n      }\\n      to {\\n        opacity: 0;\\n        transform: scale(10);\\n      }\\n    }\\n    .ripple {\\n      position: absolute;\\n      /* ripple effect should be in round shape */\\n      border-radius: 50%;\\n      background-color: rgba(0, 0, 0, 0.3);\\n      width: 100px;\\n      height: 100px;\\n      margin-top: -50px;\\n      margin-left: -50px;\\n      animation: ripple-effect 1s;\\n      opacity: 0;\\n    }\\n  \"] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.7\", ngImport: i0, type: NgxRippleComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: '[ripple]',\r\n                    template: '<ng-content></ng-content>',\r\n                    styles: [`\r\n    /* Add animation */\r\n    @keyframes ripple-effect {\r\n      from {\r\n        opacity: 1;\r\n        transform: scale(0);\r\n      }\r\n      to {\r\n        opacity: 0;\r\n        transform: scale(10);\r\n      }\r\n    }\r\n    .ripple {\r\n      position: absolute;\r\n      /* ripple effect should be in round shape */\r\n      border-radius: 50%;\r\n      background-color: rgba(0, 0, 0, 0.3);\r\n      width: 100px;\r\n      height: 100px;\r\n      margin-top: -50px;\r\n      margin-left: -50px;\r\n      animation: ripple-effect 1s;\r\n      opacity: 0;\r\n    }\r\n  `],\r\n                    exportAs: 'ripple'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { onClick: [{\r\n                type: HostListener,\r\n                args: ['click', ['$event']]\r\n            }] } });\n\nclass NgxRippleModule {\r\n}\r\nNgxRippleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.7\", ngImport: i0, type: NgxRippleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxRippleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.7\", ngImport: i0, type: NgxRippleModule, declarations: [NgxRippleComponent], exports: [NgxRippleComponent] });\r\nNgxRippleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.7\", ngImport: i0, type: NgxRippleModule, imports: [[]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.7\", ngImport: i0, type: NgxRippleModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [],\r\n                    declarations: [NgxRippleComponent],\r\n                    exports: [NgxRippleComponent]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of ngx-ripple\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxRippleComponent, NgxRippleModule };\n//# sourceMappingURL=ngx-ripple-effect.js.map\n"]},"metadata":{},"sourceType":"module"}