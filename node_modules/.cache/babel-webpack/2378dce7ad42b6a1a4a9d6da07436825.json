{"ast":null,"code":"import _asyncToGenerator from \"F:/statvalu/project/AR_DocuExpert_Test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// BaseRequestPolicy has a protected constructor.\n\n/* eslint-disable @typescript-eslint/no-useless-constructor */\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function ndJsonPolicy() {\n  return {\n    create: (nextPolicy, options) => {\n      return new NdJsonPolicy(nextPolicy, options);\n    }\n  };\n}\n/**\n * NdJsonPolicy that formats a JSON array as newline-delimited JSON\n */\n\nclass NdJsonPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of KeepAlivePolicy.\n   */\n  constructor(nextPolicy, options) {\n    super(nextPolicy, options);\n  }\n  /**\n   * Sends a request.\n   */\n\n\n  sendRequest(request) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      // There currently isn't a good way to bypass the serializer\n      if (typeof request.body === \"string\" && request.body.startsWith(\"[\")) {\n        const body = JSON.parse(request.body);\n\n        if (Array.isArray(body)) {\n          request.body = body.map(item => JSON.stringify(item) + \"\\n\").join(\"\");\n        }\n      }\n\n      return _this._nextPolicy.sendRequest(request);\n    })();\n  }\n\n} //# sourceMappingURL=ndJsonPolicy.js.map","map":{"version":3,"sources":["F:/statvalu/project/AR_DocuExpert_Test/node_modules/@azure/core-http/dist-esm/src/policies/ndJsonPolicy.js"],"names":["BaseRequestPolicy","ndJsonPolicy","create","nextPolicy","options","NdJsonPolicy","constructor","sendRequest","request","body","startsWith","JSON","parse","Array","isArray","map","item","stringify","join","_nextPolicy"],"mappings":";AAAA;AACA;AACA;;AACA;AACA,SAASA,iBAAT,QAAkC,iBAAlC;AACA,OAAO,SAASC,YAAT,GAAwB;AAC3B,SAAO;AACHC,IAAAA,MAAM,EAAE,CAACC,UAAD,EAAaC,OAAb,KAAyB;AAC7B,aAAO,IAAIC,YAAJ,CAAiBF,UAAjB,EAA6BC,OAA7B,CAAP;AACH;AAHE,GAAP;AAKH;AACD;AACA;AACA;;AACA,MAAMC,YAAN,SAA2BL,iBAA3B,CAA6C;AACzC;AACJ;AACA;AACIM,EAAAA,WAAW,CAACH,UAAD,EAAaC,OAAb,EAAsB;AAC7B,UAAMD,UAAN,EAAkBC,OAAlB;AACH;AACD;AACJ;AACA;;;AACUG,EAAAA,WAAW,CAACC,OAAD,EAAU;AAAA;;AAAA;AACvB;AACA,UAAI,OAAOA,OAAO,CAACC,IAAf,KAAwB,QAAxB,IAAoCD,OAAO,CAACC,IAAR,CAAaC,UAAb,CAAwB,GAAxB,CAAxC,EAAsE;AAClE,cAAMD,IAAI,GAAGE,IAAI,CAACC,KAAL,CAAWJ,OAAO,CAACC,IAAnB,CAAb;;AACA,YAAII,KAAK,CAACC,OAAN,CAAcL,IAAd,CAAJ,EAAyB;AACrBD,UAAAA,OAAO,CAACC,IAAR,GAAeA,IAAI,CAACM,GAAL,CAAUC,IAAD,IAAUL,IAAI,CAACM,SAAL,CAAeD,IAAf,IAAuB,IAA1C,EAAgDE,IAAhD,CAAqD,EAArD,CAAf;AACH;AACJ;;AACD,aAAO,KAAI,CAACC,WAAL,CAAiBZ,WAAjB,CAA6BC,OAA7B,CAAP;AARuB;AAS1B;;AAnBwC,C,CAqB7C","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// BaseRequestPolicy has a protected constructor.\n/* eslint-disable @typescript-eslint/no-useless-constructor */\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function ndJsonPolicy() {\n    return {\n        create: (nextPolicy, options) => {\n            return new NdJsonPolicy(nextPolicy, options);\n        }\n    };\n}\n/**\n * NdJsonPolicy that formats a JSON array as newline-delimited JSON\n */\nclass NdJsonPolicy extends BaseRequestPolicy {\n    /**\n     * Creates an instance of KeepAlivePolicy.\n     */\n    constructor(nextPolicy, options) {\n        super(nextPolicy, options);\n    }\n    /**\n     * Sends a request.\n     */\n    async sendRequest(request) {\n        // There currently isn't a good way to bypass the serializer\n        if (typeof request.body === \"string\" && request.body.startsWith(\"[\")) {\n            const body = JSON.parse(request.body);\n            if (Array.isArray(body)) {\n                request.body = body.map((item) => JSON.stringify(item) + \"\\n\").join(\"\");\n            }\n        }\n        return this._nextPolicy.sendRequest(request);\n    }\n}\n//# sourceMappingURL=ndJsonPolicy.js.map"]},"metadata":{},"sourceType":"module"}