{"ast":null,"code":"import _asyncToGenerator from \"F:/statvalu/project/AR_DocuExpert_Test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class ModalService {\n  constructor(router) {\n    this.router = router;\n  }\n\n  showError(msg) {\n    Swal.fire({\n      title: 'Error!',\n      text: msg,\n      icon: 'error',\n      confirmButtonText: 'OK'\n    });\n  }\n\n  showMsg(msg, title, icon) {\n    Swal.fire({\n      title: title,\n      text: msg,\n      icon: icon,\n      confirmButtonText: 'OK'\n    });\n  }\n\n  showAuthError(msg) {\n    localStorage.removeItem(\"token\");\n    this.router.navigate(['/auth/login']);\n    Swal.fire({\n      title: 'Auth Error!',\n      text: msg,\n      icon: 'error',\n      confirmButtonText: 'Retry',\n      backdrop: true,\n      allowOutsideClick: () => false\n    });\n  }\n\n  showUsageError(msg) {\n    Swal.fire({\n      title: 'Usage Error!',\n      text: msg,\n      icon: 'error',\n      confirmButtonText: 'Buy Subscription',\n      cancelButtonText: 'Retry',\n      showCancelButton: true,\n      backdrop: true,\n      allowOutsideClick: () => false\n    }).then(result => {\n      if (result.isConfirmed) {\n        console.log('Buy Subscription');\n        this.router.navigate(['/viewDir/subscriptions']);\n      }\n    });\n  }\n\n  showRegistrationSuccess(msg) {\n    Swal.fire({\n      title: 'Registration Successful',\n      text: msg,\n      icon: 'success',\n      showCancelButton: false,\n      // confirmButtonColor: '#3085d6',\n      // cancelButtonColor: '#d33',\n      confirmButtonText: 'Ok',\n      allowOutsideClick: () => false\n    }).then(result => {\n      if (result.isConfirmed) {\n        Swal.fire({\n          position: 'top-start',\n          icon: 'success',\n          title: 'Redirecting To Login Screen',\n          showConfirmButton: false,\n          timer: 1500\n        });\n        this.router.navigate(['/auth/login']);\n      }\n    });\n  }\n\n  renameDirModal(dirType, dirName, dirExt) {\n    Swal.fire({\n      title: `Please Enter your ${dirType} Name`,\n      input: 'text',\n      inputAttributes: {\n        autocapitalize: 'off',\n        maxlength: '255'\n      },\n      inputValue: dirName,\n      backdrop: true,\n      showCancelButton: true,\n      confirmButtonText: 'Rename ' + dirType,\n      showLoaderOnConfirm: true,\n      preConfirm: function () {\n        var _ref = _asyncToGenerator(function* (directoryName) {\n          if (!directoryName) {\n            Swal.showValidationMessage(\"please give proper value\");\n          } else if (directoryName && directoryName.includes('.')) {\n            Swal.showValidationMessage(\"should not contain dot(.)\");\n          } // else if (directoryName && directoryName.includes(' ')) {\n          //   Swal.showValidationMessage(\"should not contain any space\");\n          // }\n          else {\n            if (dirType === 'File') {\n              directoryName = directoryName + '.' + dirExt;\n            }\n\n            console.log(directoryName);\n          }\n        });\n\n        return function preConfirm(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      allowOutsideClick: () => false\n    }).then(result => {\n      if (result.isConfirmed) {\n        Swal.fire({\n          icon: 'success',\n          title: `${result.value} ${dirType} Renamed Successfully`,\n          showConfirmButton: false,\n          timer: 1500\n        });\n      }\n    });\n  }\n\n  uploadFromLink() {\n    return _asyncToGenerator(function* () {\n      const {\n        value: formValues\n      } = yield Swal.fire({\n        title: 'Upload From Drive Link',\n        html: `<p class=\"mb-0\">Input Link 1</p><input id=\"swal-input1\" class=\"swal2-input mt-3\">` + '<p class=\"mb-0 mt-3\">Project Name</p><input id=\"swal-input4\" class=\"swal2-input mt-3\">' + '<p class=\"mb-0 mt-3\">Input Link 2</p><input id=\"swal-input2\" class=\"swal2-input mt-3\">' + '<p class=\"mb-0 mt-3\">Output Link</p><input id=\"swal-input3\" class=\"swal2-input mt-3\">',\n        focusConfirm: false,\n        preConfirm: () => {\n          return [//@ts-ignore\n          document.getElementById('swal-input1').value, //@ts-ignore\n          document.getElementById('swal-input2').value, //@ts-ignore\n          document.getElementById('swal-input2').value, //@ts-ignore\n          document.getElementById('swal-input4').value];\n        }\n      });\n\n      if (formValues) {\n        Swal.fire(JSON.stringify(formValues));\n      }\n    })();\n  }\n\n  showFeatureProcessSuccess(msg) {\n    Swal.fire({\n      icon: 'success',\n      title: msg,\n      showConfirmButton: false,\n      timer: 1500\n    });\n  }\n\n}\n\nModalService.ɵfac = function ModalService_Factory(t) {\n  return new (t || ModalService)(i0.ɵɵinject(i1.Router));\n};\n\nModalService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ModalService,\n  factory: ModalService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["F:\\statvalu\\project\\AR_DocuExpert_Test\\src\\app\\_helpers\\services\\modal.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport Swal, { SweetAlertIcon } from 'sweetalert2';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalService {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  showError(msg: string) {\r\n    Swal.fire({\r\n      title: 'Error!',\r\n      text: msg,\r\n      icon: 'error',\r\n      confirmButtonText: 'OK'\r\n    })\r\n  }\r\n\r\n  showMsg(msg: string, title: string, icon: SweetAlertIcon) {\r\n    Swal.fire({\r\n      title: title,\r\n      text: msg,\r\n      icon: icon,\r\n      confirmButtonText: 'OK'\r\n    })\r\n  }\r\n\r\n  showAuthError(msg: string) {\r\n    localStorage.removeItem(\"token\");\r\n    this.router.navigate(['/auth/login']);\r\n    Swal.fire({\r\n      title: 'Auth Error!',\r\n      text: msg,\r\n      icon: 'error',\r\n      confirmButtonText: 'Retry',\r\n      backdrop: true,\r\n      allowOutsideClick: () => false\r\n    })\r\n  }\r\n\r\n  showUsageError(msg: string) {\r\n    Swal.fire({\r\n      title: 'Usage Error!',\r\n      text: msg,\r\n      icon: 'error',\r\n      confirmButtonText: 'Buy Subscription',\r\n      cancelButtonText: 'Retry',\r\n      showCancelButton: true,\r\n      backdrop: true,\r\n      allowOutsideClick: () => false\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        console.log('Buy Subscription');\r\n        this.router.navigate(['/viewDir/subscriptions']);\r\n      }\r\n    })\r\n  }\r\n\r\n  showRegistrationSuccess(msg: string) {\r\n    Swal.fire({\r\n      title: 'Registration Successful',\r\n      text: msg,\r\n      icon: 'success',\r\n      showCancelButton: false,\r\n      // confirmButtonColor: '#3085d6',\r\n      // cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Ok',\r\n      allowOutsideClick: () => false\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire({\r\n          position: 'top-start',\r\n          icon: 'success',\r\n          title: 'Redirecting To Login Screen',\r\n          showConfirmButton: false,\r\n          timer: 1500\r\n        })\r\n        this.router.navigate(['/auth/login'])\r\n      }\r\n    })\r\n  }\r\n\r\n  renameDirModal(dirType: string, dirName: string, dirExt: string) {\r\n    Swal.fire({\r\n      title: `Please Enter your ${dirType} Name`,\r\n      input: 'text',\r\n      inputAttributes: {\r\n        autocapitalize: 'off',\r\n        maxlength: '255'\r\n      },\r\n      inputValue: dirName,\r\n      backdrop: true,\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Rename ' + dirType,\r\n      showLoaderOnConfirm: true,\r\n      preConfirm: async (directoryName) => {\r\n        if (!directoryName) {\r\n          Swal.showValidationMessage(\"please give proper value\");\r\n        }\r\n        else if (directoryName && directoryName.includes('.')) {\r\n          Swal.showValidationMessage(\"should not contain dot(.)\");\r\n        }\r\n        // else if (directoryName && directoryName.includes(' ')) {\r\n        //   Swal.showValidationMessage(\"should not contain any space\");\r\n        // }\r\n        else {\r\n          if (dirType === 'File') {\r\n            directoryName = directoryName + '.' + dirExt\r\n          }\r\n\r\n          console.log(directoryName);\r\n        }\r\n      },\r\n      allowOutsideClick: () => false\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: `${result.value} ${dirType} Renamed Successfully`,\r\n          showConfirmButton: false,\r\n          timer: 1500\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  async uploadFromLink() {\r\n    const { value: formValues } = await Swal.fire({\r\n      title: 'Upload From Drive Link',\r\n      html:\r\n        `<p class=\"mb-0\">Input Link 1</p><input id=\"swal-input1\" class=\"swal2-input mt-3\">` +\r\n        '<p class=\"mb-0 mt-3\">Project Name</p><input id=\"swal-input4\" class=\"swal2-input mt-3\">' +\r\n        '<p class=\"mb-0 mt-3\">Input Link 2</p><input id=\"swal-input2\" class=\"swal2-input mt-3\">' +\r\n        '<p class=\"mb-0 mt-3\">Output Link</p><input id=\"swal-input3\" class=\"swal2-input mt-3\">',\r\n      focusConfirm: false,\r\n      preConfirm: () => {\r\n        return [\r\n          //@ts-ignore\r\n          document.getElementById('swal-input1').value,\r\n           //@ts-ignore\r\n           document.getElementById('swal-input2').value,\r\n          //@ts-ignore\r\n          document.getElementById('swal-input2').value,\r\n          //@ts-ignore\r\n          document.getElementById('swal-input4').value\r\n        ]\r\n      }\r\n    })\r\n\r\n    if (formValues) {\r\n      Swal.fire(JSON.stringify(formValues))\r\n    }\r\n  }\r\n\r\n\r\n  showFeatureProcessSuccess(msg: string) {\r\n    Swal.fire({\r\n      icon: 'success',\r\n      title: msg,\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    })\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}