{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { startWith } from 'rxjs/operators';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/autocomplete\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/core\";\n\nfunction AircraftMetadataComponent_mat_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2, \" \");\n  }\n}\n\nexport class AircraftMetadataComponent {\n  constructor() {\n    this.myControl = new FormControl();\n    this.options = ['One', 'Two', 'Three'];\n  }\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(val => this.filter(val)));\n  }\n\n  filter(val) {\n    return this.options.filter(option => option.toLowerCase().indexOf(val.toLowerCase()) === 0);\n  }\n\n}\n\nAircraftMetadataComponent.ɵfac = function AircraftMetadataComponent_Factory(t) {\n  return new (t || AircraftMetadataComponent)();\n};\n\nAircraftMetadataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AircraftMetadataComponent,\n  selectors: [[\"app-aircraft-metadata\"]],\n  decls: 7,\n  vars: 5,\n  consts: [[1, \"example-form\"], [1, \"example-full-width\"], [\"type\", \"text\", \"placeholder\", \"Pick one\", \"aria-label\", \"Number\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function AircraftMetadataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵelementStart(1, \"mat-form-field\", 1);\n      i0.ɵɵelement(2, \"input\", 2);\n      i0.ɵɵelementStart(3, \"mat-autocomplete\", null, 3);\n      i0.ɵɵtemplate(5, AircraftMetadataComponent_mat_option_5_Template, 2, 2, \"mat-option\", 4);\n      i0.ɵɵpipe(6, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(4);\n\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(6, 3, ctx.filteredOptions));\n    }\n  },\n  directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm, i2.MatFormField, i3.MatInput, i1.DefaultValueAccessor, i4.MatAutocompleteTrigger, i1.NgControlStatus, i1.FormControlDirective, i4.MatAutocomplete, i5.NgForOf, i6.MatOption],\n  pipes: [i5.AsyncPipe],\n  styles: [\".example-form[_ngcontent-%COMP%] {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFpcmNyYWZ0LW1ldGFkYXRhLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7QUFDSjs7QUFFRTtFQUNFLFdBQUE7QUFDSiIsImZpbGUiOiJhaXJjcmFmdC1tZXRhZGF0YS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWZvcm0ge1xyXG4gICAgbWluLXdpZHRoOiAxNTBweDtcclxuICAgIG1heC13aWR0aDogNTAwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgXHJcbiAgLmV4YW1wbGUtZnVsbC13aWR0aCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9Il19 */\"]\n});","map":{"version":3,"sources":["F:\\statvalu\\project\\AR_DocuExpert_Test\\src\\app\\featuremodules\\input-folder\\aircraft-metadata\\aircraft-metadata.component.ts","F:\\statvalu\\project\\AR_DocuExpert_Test\\src\\app\\featuremodules\\input-folder\\aircraft-metadata\\aircraft-metadata.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {map} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-aircraft-metadata',\n  templateUrl: './aircraft-metadata.component.html',\n  styleUrls: ['./aircraft-metadata.component.scss']\n})\nexport class AircraftMetadataComponent implements OnInit {\n  myControl: FormControl = new FormControl();\n\n  options = [\n    'One',\n    'Two',\n    'Three'\n  ];\n\n  constructor() { }\n\n  filteredOptions: Observable<string[]>;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(val => this.filter(val))\n      );\n  }\n\n  filter(val: string): string[] {\n    return this.options.filter(option =>\n      option.toLowerCase().indexOf(val.toLowerCase()) === 0);\n  }\n\n\n}\n","<form class=\"example-form\">\n    <mat-form-field class=\"example-full-width\">\n      <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\">\n      <mat-autocomplete #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n          {{ option }}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  </form>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}