{"ast":null,"code":"import _asyncToGenerator from \"F:/statvalu/project/AR_DocuExpert_Test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class CommonnService {\n  constructor(router) {\n    this.router = router;\n    this.$updateDirectory = new Subject();\n    this.$unselectFeatureCheckbox = new Subject();\n    this.$featureName = new BehaviorSubject('');\n    this.$unselectPdfCsvDirectory = new Subject();\n    this.$featureProgressStart = new Subject();\n    this.$removeAllModals = new Subject();\n    this.$tableViewData = new BehaviorSubject([]);\n    this.$updateCurrentOutput = new BehaviorSubject('');\n    this.$toggleSidebar = new Subject();\n    this.$openDirectory = new Subject();\n    this.$openFile = new Subject();\n    this.$refreshDirectories = new Subject();\n    this.$downloadBible = new Subject();\n    this.$pushDirForBiblePageReordering = new Subject();\n    this.$showTree = new Subject();\n    this.$hideExternalViewer = new Subject();\n    this.$foldersTreeData = new Subject();\n    this.$deleteBible = new Subject();\n    this.currSelectedFeature = '';\n    this.loaderText = \"\";\n    this.showDownloadModal = false;\n    this.downloadedData = 0;\n    this.totalDownloadFileSize = 0;\n    this.downloadProgress = 0;\n    this.downloadComplete = false;\n    this.showVUploadModal = false;\n    this.vuploadComplete = false;\n    this.vuploadProgress = 0;\n    this.vdocumentProgress = 0;\n    this.containerRef = null;\n  }\n\n  getRandomString() {\n    // return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 2);\n    return Date.now().toString(36) + Math.random().toString(36).substr(2, 2);\n  }\n\n  csvToText(encodedString) {\n    return new Promise((resolve, reject) => {\n      const byteCharacters = atob(encodedString);\n      const byteNumbers = new Array(byteCharacters.length);\n\n      for (let i = 0; i < byteCharacters.length; i++) {\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\n      }\n\n      const byteArray = new Uint8Array(byteNumbers);\n      const blob = new Blob([byteArray], {\n        type: 'text/csv'\n      });\n      let fileReader = new FileReader();\n      let csvText = null;\n\n      fileReader.onload = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (e) {\n          csvText = fileReader.result;\n          resolve(csvText);\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      fileReader.readAsText(blob);\n    });\n  }\n\n  redirectToDir(errorPath, folderName) {\n    let redirect_path = errorPath.split('/').slice(3);\n    console.log(redirect_path);\n\n    if (!(folderName === 'ginput')) {\n      redirect_path.pop();\n    }\n\n    if (folderName === 'output') {\n      localStorage.setItem('output', JSON.stringify(redirect_path));\n      this.router.navigate(['/viewDir/output-folder']);\n    } else if (folderName === 'req') {\n      localStorage.setItem('req', JSON.stringify(redirect_path));\n      this.router.navigate(['/viewDir/request-folder']);\n    } else if (folderName === 'err') {\n      localStorage.setItem('err', JSON.stringify(redirect_path));\n      this.router.navigate(['/viewDir/error-folder']);\n    } else {\n      localStorage.setItem('input', JSON.stringify(redirect_path));\n      this.router.navigate(['/viewDir/myfiles']);\n    }\n  }\n\n  dec2hex(dec) {\n    return dec.toString(16).padStart(2, \"0\");\n  } // generateId :: Integer -> String\n\n\n  generateId(len = 10) {\n    var arr = new Uint8Array((len || 40) / 2);\n    window.crypto.getRandomValues(arr);\n    return Array.from(arr, this.dec2hex).join('');\n  }\n\n}\n\nCommonnService.ɵfac = function CommonnService_Factory(t) {\n  return new (t || CommonnService)(i0.ɵɵinject(i1.Router));\n};\n\nCommonnService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CommonnService,\n  factory: CommonnService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["F:\\statvalu\\project\\AR_DocuExpert_Test\\src\\app\\_helpers\\common\\commonn.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpClient, HttpEventType } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonnService {\r\n\r\n  $updateDirectory = new Subject();\r\n\r\n  $unselectFeatureCheckbox = new Subject();\r\n\r\n  $featureName = new BehaviorSubject<any>('');\r\n\r\n  $unselectPdfCsvDirectory = new Subject();\r\n\r\n  $featureProgressStart = new Subject();\r\n\r\n  $removeAllModals = new Subject();\r\n\r\n  $tableViewData = new BehaviorSubject<any>([]);\r\n\r\n  $updateCurrentOutput = new BehaviorSubject<any>('');\r\n\r\n  $toggleSidebar = new Subject();\r\n\r\n  $openDirectory = new Subject();\r\n\r\n  $openFile = new Subject();\r\n\r\n  $refreshDirectories = new Subject();\r\n\r\n  $downloadBible = new Subject();\r\n\r\n  $pushDirForBiblePageReordering = new Subject();\r\n\r\n  $showTree = new Subject();\r\n\r\n  $hideExternalViewer = new Subject();\r\n\r\n  $foldersTreeData = new Subject();\r\n\r\n  $deleteBible = new Subject();\r\n\r\n  currSelectedFeature = '';\r\n\r\n  loaderText: string = \"\";\r\n\r\n  showDownloadModal: boolean = false;\r\n  downloadedData: any = 0;\r\n  totalDownloadFileSize: any = 0;\r\n  downloadProgress: any = 0;\r\n  downloadComplete: boolean = false;\r\n\r\n  showVUploadModal: boolean = false;\r\n  vuploadComplete: boolean = false;\r\n  vuploadProgress: any = 0;\r\n  vdocumentProgress: any = 0;\r\n\r\n  containerRef: any = null;\r\n\r\n  constructor(private router: Router) { }\r\n  \r\n  getRandomString(): string {\r\n    // return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 2);\r\n    return Date.now().toString(36) + Math.random().toString(36).substr(2, 2);\r\n  }\r\n\r\n  csvToText(encodedString: any):Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      const byteCharacters = atob(encodedString);\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n      const byteArray = new Uint8Array(byteNumbers);\r\n      const blob = new Blob([byteArray], { type: 'text/csv' });\r\n\r\n      let fileReader = new FileReader();\r\n\r\n      let csvText: any = null;\r\n      fileReader.onload = async (e) => {\r\n        csvText = fileReader.result;\r\n        resolve(csvText);\r\n      }\r\n      fileReader.readAsText(blob);\r\n    });\r\n  }\r\n\r\n  redirectToDir(errorPath: string, folderName: string) {\r\n    let redirect_path = errorPath.split('/').slice(3);\r\n    console.log(redirect_path);\r\n    if (!(folderName ==='ginput')) {\r\n      redirect_path.pop();\r\n    }\r\n    if (folderName === 'output') {\r\n      localStorage.setItem('output', JSON.stringify(redirect_path));\r\n      this.router.navigate(['/viewDir/output-folder']);\r\n    }\r\n    else if (folderName === 'req') {\r\n      localStorage.setItem('req', JSON.stringify(redirect_path));\r\n      this.router.navigate(['/viewDir/request-folder']);\r\n    }\r\n    else if (folderName === 'err') {\r\n      localStorage.setItem('err', JSON.stringify(redirect_path));\r\n      this.router.navigate(['/viewDir/error-folder']);\r\n    } \r\n    else {\r\n      localStorage.setItem('input', JSON.stringify(redirect_path));\r\n      this.router.navigate(['/viewDir/myfiles']);\r\n    }\r\n  }\r\n\r\n  dec2hex (dec:any) {\r\n    return dec.toString(16).padStart(2, \"0\")\r\n  }\r\n  \r\n  // generateId :: Integer -> String\r\n  generateId (len = 10) {\r\n    var arr = new Uint8Array((len || 40) / 2)\r\n    window.crypto.getRandomValues(arr)\r\n    return Array.from(arr, this.dec2hex).join('')\r\n  }\r\n}\r\n\r\n//break number into 5 parts javascript\r\n\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}