{"ast":null,"code":"import _asyncToGenerator from \"F:/statvalu/AR_DocuExpert_Test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Convert a Browser Blob object into ArrayBuffer.\n *\n * @param blob -\n */\nexport function blobToArrayBuffer(_x) {\n  return _blobToArrayBuffer.apply(this, arguments);\n}\n/**\n * Convert a Browser Blob object into string.\n *\n * @param blob -\n */\n\nfunction _blobToArrayBuffer() {\n  _blobToArrayBuffer = _asyncToGenerator(function* (blob) {\n    const fileReader = new FileReader();\n    return new Promise((resolve, reject) => {\n      fileReader.onloadend = ev => {\n        resolve(ev.target.result);\n      };\n\n      fileReader.onerror = reject;\n      fileReader.readAsArrayBuffer(blob);\n    });\n  });\n  return _blobToArrayBuffer.apply(this, arguments);\n}\n\nexport function blobToString(_x2) {\n  return _blobToString.apply(this, arguments);\n}\n\nfunction _blobToString() {\n  _blobToString = _asyncToGenerator(function* (blob) {\n    const fileReader = new FileReader();\n    return new Promise((resolve, reject) => {\n      fileReader.onloadend = ev => {\n        resolve(ev.target.result);\n      };\n\n      fileReader.onerror = reject;\n      fileReader.readAsText(blob);\n    });\n  });\n  return _blobToString.apply(this, arguments);\n}\n\nexport function streamToBuffer() {\n  /* empty */\n}\nexport function streamToBuffer2() {\n  /* empty */\n}\nexport function readStreamToLocalFile() {\n  /* empty */\n}\nexport const fsStat = function stat() {\n  /* empty */\n};\nexport const fsCreateReadStream = function createReadStream() {\n  /* empty */\n}; //# sourceMappingURL=utils.browser.js.map","map":{"version":3,"sources":["F:/statvalu/AR_DocuExpert_Test/node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/utils.browser.js"],"names":["blobToArrayBuffer","blob","fileReader","FileReader","Promise","resolve","reject","onloadend","ev","target","result","onerror","readAsArrayBuffer","blobToString","readAsText","streamToBuffer","streamToBuffer2","readStreamToLocalFile","fsStat","stat","fsCreateReadStream","createReadStream"],"mappings":";AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,gBAAsBA,iBAAtB;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;;;yCAdO,WAAiCC,IAAjC,EAAuC;AAC1C,UAAMC,UAAU,GAAG,IAAIC,UAAJ,EAAnB;AACA,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCJ,MAAAA,UAAU,CAACK,SAAX,GAAwBC,EAAD,IAAQ;AAC3BH,QAAAA,OAAO,CAACG,EAAE,CAACC,MAAH,CAAUC,MAAX,CAAP;AACH,OAFD;;AAGAR,MAAAA,UAAU,CAACS,OAAX,GAAqBL,MAArB;AACAJ,MAAAA,UAAU,CAACU,iBAAX,CAA6BX,IAA7B;AACH,KANM,CAAP;AAOH,G;;;;AAMD,gBAAsBY,YAAtB;AAAA;AAAA;;;oCAAO,WAA4BZ,IAA5B,EAAkC;AACrC,UAAMC,UAAU,GAAG,IAAIC,UAAJ,EAAnB;AACA,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCJ,MAAAA,UAAU,CAACK,SAAX,GAAwBC,EAAD,IAAQ;AAC3BH,QAAAA,OAAO,CAACG,EAAE,CAACC,MAAH,CAAUC,MAAX,CAAP;AACH,OAFD;;AAGAR,MAAAA,UAAU,CAACS,OAAX,GAAqBL,MAArB;AACAJ,MAAAA,UAAU,CAACY,UAAX,CAAsBb,IAAtB;AACH,KANM,CAAP;AAOH,G;;;;AACD,OAAO,SAASc,cAAT,GAA0B;AAC7B;AACH;AACD,OAAO,SAASC,eAAT,GAA2B;AAC9B;AACH;AACD,OAAO,SAASC,qBAAT,GAAiC;AACpC;AACH;AACD,OAAO,MAAMC,MAAM,GAAG,SAASC,IAAT,GAAgB;AAClC;AACH,CAFM;AAGP,OAAO,MAAMC,kBAAkB,GAAG,SAASC,gBAAT,GAA4B;AAC1D;AACH,CAFM,C,CAGP","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Convert a Browser Blob object into ArrayBuffer.\n *\n * @param blob -\n */\nexport async function blobToArrayBuffer(blob) {\n    const fileReader = new FileReader();\n    return new Promise((resolve, reject) => {\n        fileReader.onloadend = (ev) => {\n            resolve(ev.target.result);\n        };\n        fileReader.onerror = reject;\n        fileReader.readAsArrayBuffer(blob);\n    });\n}\n/**\n * Convert a Browser Blob object into string.\n *\n * @param blob -\n */\nexport async function blobToString(blob) {\n    const fileReader = new FileReader();\n    return new Promise((resolve, reject) => {\n        fileReader.onloadend = (ev) => {\n            resolve(ev.target.result);\n        };\n        fileReader.onerror = reject;\n        fileReader.readAsText(blob);\n    });\n}\nexport function streamToBuffer() {\n    /* empty */\n}\nexport function streamToBuffer2() {\n    /* empty */\n}\nexport function readStreamToLocalFile() {\n    /* empty */\n}\nexport const fsStat = function stat() {\n    /* empty */\n};\nexport const fsCreateReadStream = function createReadStream() {\n    /* empty */\n};\n//# sourceMappingURL=utils.browser.js.map"]},"metadata":{},"sourceType":"module"}