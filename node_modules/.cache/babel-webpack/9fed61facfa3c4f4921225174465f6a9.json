{"ast":null,"code":"import _asyncToGenerator from \"F:/statvalu/project/AR_DocuExpert_Test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { failureStates, successStates } from \"./models\";\nimport { isUnexpectedPollingResponse } from \"./requestUtils\";\n\nfunction getResponseStatus(rawResponse) {\n  var _a;\n\n  const {\n    status\n  } = (_a = rawResponse.body) !== null && _a !== void 0 ? _a : {};\n  return typeof status === \"string\" ? status.toLowerCase() : \"succeeded\";\n}\n\nfunction isAzureAsyncPollingDone(rawResponse) {\n  const state = getResponseStatus(rawResponse);\n\n  if (isUnexpectedPollingResponse(rawResponse) || failureStates.includes(state)) {\n    throw new Error(`The long running operation has failed. The provisioning state: ${state}.`);\n  }\n\n  return successStates.includes(state);\n}\n/**\n * Sends a request to the URI of the provisioned resource if needed.\n */\n\n\nfunction sendFinalRequest(_x, _x2, _x3) {\n  return _sendFinalRequest.apply(this, arguments);\n}\n\nfunction _sendFinalRequest() {\n  _sendFinalRequest = _asyncToGenerator(function* (lro, resourceLocation, lroResourceLocationConfig) {\n    switch (lroResourceLocationConfig) {\n      case \"original-uri\":\n        return lro.sendPollRequest(lro.requestPath);\n\n      case \"azure-async-operation\":\n        return undefined;\n\n      case \"location\":\n      default:\n        return lro.sendPollRequest(resourceLocation !== null && resourceLocation !== void 0 ? resourceLocation : lro.requestPath);\n    }\n  });\n  return _sendFinalRequest.apply(this, arguments);\n}\n\nexport function processAzureAsyncOperationResult(lro, resourceLocation, lroResourceLocationConfig) {\n  return response => {\n    if (isAzureAsyncPollingDone(response.rawResponse)) {\n      if (resourceLocation === undefined) {\n        return Object.assign(Object.assign({}, response), {\n          done: true\n        });\n      } else {\n        return Object.assign(Object.assign({}, response), {\n          done: false,\n          next: function () {\n            var _ref = _asyncToGenerator(function* () {\n              const finalResponse = yield sendFinalRequest(lro, resourceLocation, lroResourceLocationConfig);\n              return Object.assign(Object.assign({}, finalResponse !== null && finalResponse !== void 0 ? finalResponse : response), {\n                done: true\n              });\n            });\n\n            return function next() {\n              return _ref.apply(this, arguments);\n            };\n          }()\n        });\n      }\n    }\n\n    return Object.assign(Object.assign({}, response), {\n      done: false\n    });\n  };\n} //# sourceMappingURL=azureAsyncPolling.js.map","map":{"version":3,"sources":["F:/statvalu/project/AR_DocuExpert_Test/node_modules/@azure/core-lro/dist-esm/src/lroEngine/azureAsyncPolling.js"],"names":["failureStates","successStates","isUnexpectedPollingResponse","getResponseStatus","rawResponse","_a","status","body","toLowerCase","isAzureAsyncPollingDone","state","includes","Error","sendFinalRequest","lro","resourceLocation","lroResourceLocationConfig","sendPollRequest","requestPath","undefined","processAzureAsyncOperationResult","response","Object","assign","done","next","finalResponse"],"mappings":";AAAA;AACA;AACA,SAASA,aAAT,EAAwBC,aAAxB,QAA6C,UAA7C;AACA,SAASC,2BAAT,QAA4C,gBAA5C;;AACA,SAASC,iBAAT,CAA2BC,WAA3B,EAAwC;AACpC,MAAIC,EAAJ;;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAa,CAACD,EAAE,GAAGD,WAAW,CAACG,IAAlB,MAA4B,IAA5B,IAAoCF,EAAE,KAAK,KAAK,CAAhD,GAAoDA,EAApD,GAAyD,EAA5E;AACA,SAAO,OAAOC,MAAP,KAAkB,QAAlB,GAA6BA,MAAM,CAACE,WAAP,EAA7B,GAAoD,WAA3D;AACH;;AACD,SAASC,uBAAT,CAAiCL,WAAjC,EAA8C;AAC1C,QAAMM,KAAK,GAAGP,iBAAiB,CAACC,WAAD,CAA/B;;AACA,MAAIF,2BAA2B,CAACE,WAAD,CAA3B,IAA4CJ,aAAa,CAACW,QAAd,CAAuBD,KAAvB,CAAhD,EAA+E;AAC3E,UAAM,IAAIE,KAAJ,CAAW,kEAAiEF,KAAM,GAAlF,CAAN;AACH;;AACD,SAAOT,aAAa,CAACU,QAAd,CAAuBD,KAAvB,CAAP;AACH;AACD;AACA;AACA;;;SACeG,gB;;;;;wCAAf,WAAgCC,GAAhC,EAAqCC,gBAArC,EAAuDC,yBAAvD,EAAkF;AAC9E,YAAQA,yBAAR;AACI,WAAK,cAAL;AACI,eAAOF,GAAG,CAACG,eAAJ,CAAoBH,GAAG,CAACI,WAAxB,CAAP;;AACJ,WAAK,uBAAL;AACI,eAAOC,SAAP;;AACJ,WAAK,UAAL;AACA;AACI,eAAOL,GAAG,CAACG,eAAJ,CAAoBF,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2DA,gBAA3D,GAA8ED,GAAG,CAACI,WAAtG,CAAP;AAPR;AASH,G;;;;AACD,OAAO,SAASE,gCAAT,CAA0CN,GAA1C,EAA+CC,gBAA/C,EAAiEC,yBAAjE,EAA4F;AAC/F,SAAQK,QAAD,IAAc;AACjB,QAAIZ,uBAAuB,CAACY,QAAQ,CAACjB,WAAV,CAA3B,EAAmD;AAC/C,UAAIW,gBAAgB,KAAKI,SAAzB,EAAoC;AAChC,eAAOG,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,QAAlB,CAAd,EAA2C;AAAEG,UAAAA,IAAI,EAAE;AAAR,SAA3C,CAAP;AACH,OAFD,MAGK;AACD,eAAOF,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,QAAlB,CAAd,EAA2C;AAAEG,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,IAAI;AAAA,yCAAE,aAAY;AAC3E,oBAAMC,aAAa,SAASb,gBAAgB,CAACC,GAAD,EAAMC,gBAAN,EAAwBC,yBAAxB,CAA5C;AACA,qBAAOM,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAmBG,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,KAAK,CAAjD,GAAqDA,aAArD,GAAqEL,QAAxF,CAAd,EAAkH;AAAEG,gBAAAA,IAAI,EAAE;AAAR,eAAlH,CAAP;AACH,aAHgE;;AAAA;AAAA;AAAA;AAAA;AAAnB,SAA3C,CAAP;AAIH;AACJ;;AACD,WAAOF,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,QAAlB,CAAd,EAA2C;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAA3C,CAAP;AACH,GAbD;AAcH,C,CACD","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { failureStates, successStates } from \"./models\";\nimport { isUnexpectedPollingResponse } from \"./requestUtils\";\nfunction getResponseStatus(rawResponse) {\n    var _a;\n    const { status } = (_a = rawResponse.body) !== null && _a !== void 0 ? _a : {};\n    return typeof status === \"string\" ? status.toLowerCase() : \"succeeded\";\n}\nfunction isAzureAsyncPollingDone(rawResponse) {\n    const state = getResponseStatus(rawResponse);\n    if (isUnexpectedPollingResponse(rawResponse) || failureStates.includes(state)) {\n        throw new Error(`The long running operation has failed. The provisioning state: ${state}.`);\n    }\n    return successStates.includes(state);\n}\n/**\n * Sends a request to the URI of the provisioned resource if needed.\n */\nasync function sendFinalRequest(lro, resourceLocation, lroResourceLocationConfig) {\n    switch (lroResourceLocationConfig) {\n        case \"original-uri\":\n            return lro.sendPollRequest(lro.requestPath);\n        case \"azure-async-operation\":\n            return undefined;\n        case \"location\":\n        default:\n            return lro.sendPollRequest(resourceLocation !== null && resourceLocation !== void 0 ? resourceLocation : lro.requestPath);\n    }\n}\nexport function processAzureAsyncOperationResult(lro, resourceLocation, lroResourceLocationConfig) {\n    return (response) => {\n        if (isAzureAsyncPollingDone(response.rawResponse)) {\n            if (resourceLocation === undefined) {\n                return Object.assign(Object.assign({}, response), { done: true });\n            }\n            else {\n                return Object.assign(Object.assign({}, response), { done: false, next: async () => {\n                        const finalResponse = await sendFinalRequest(lro, resourceLocation, lroResourceLocationConfig);\n                        return Object.assign(Object.assign({}, (finalResponse !== null && finalResponse !== void 0 ? finalResponse : response)), { done: true });\n                    } });\n            }\n        }\n        return Object.assign(Object.assign({}, response), { done: false });\n    };\n}\n//# sourceMappingURL=azureAsyncPolling.js.map"]},"metadata":{},"sourceType":"module"}