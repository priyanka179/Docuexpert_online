{"ast":null,"code":"import _asyncToGenerator from \"F:/statvalu/project/AR_DocuExpert_Test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport const DefaultKeepAliveOptions = {\n  enable: true\n};\nexport function keepAlivePolicy(keepAliveOptions) {\n  return {\n    create: (nextPolicy, options) => {\n      return new KeepAlivePolicy(nextPolicy, options, keepAliveOptions || DefaultKeepAliveOptions);\n    }\n  };\n}\n/**\n * KeepAlivePolicy is a policy used to control keep alive settings for every request.\n */\n\nexport class KeepAlivePolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of KeepAlivePolicy.\n   *\n   * @param nextPolicy -\n   * @param options -\n   * @param keepAliveOptions -\n   */\n  constructor(nextPolicy, options, keepAliveOptions) {\n    super(nextPolicy, options);\n    this.keepAliveOptions = keepAliveOptions;\n  }\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   * @returns\n   */\n\n\n  sendRequest(request) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      request.keepAlive = _this.keepAliveOptions.enable;\n      return _this._nextPolicy.sendRequest(request);\n    })();\n  }\n\n} //# sourceMappingURL=keepAlivePolicy.js.map","map":{"version":3,"sources":["F:/statvalu/project/AR_DocuExpert_Test/node_modules/@azure/core-http/dist-esm/src/policies/keepAlivePolicy.js"],"names":["BaseRequestPolicy","DefaultKeepAliveOptions","enable","keepAlivePolicy","keepAliveOptions","create","nextPolicy","options","KeepAlivePolicy","constructor","sendRequest","request","keepAlive","_nextPolicy"],"mappings":";AAAA;AACA;AACA,SAASA,iBAAT,QAAkC,iBAAlC;AACA,OAAO,MAAMC,uBAAuB,GAAG;AACnCC,EAAAA,MAAM,EAAE;AAD2B,CAAhC;AAGP,OAAO,SAASC,eAAT,CAAyBC,gBAAzB,EAA2C;AAC9C,SAAO;AACHC,IAAAA,MAAM,EAAE,CAACC,UAAD,EAAaC,OAAb,KAAyB;AAC7B,aAAO,IAAIC,eAAJ,CAAoBF,UAApB,EAAgCC,OAAhC,EAAyCH,gBAAgB,IAAIH,uBAA7D,CAAP;AACH;AAHE,GAAP;AAKH;AACD;AACA;AACA;;AACA,OAAO,MAAMO,eAAN,SAA8BR,iBAA9B,CAAgD;AACnD;AACJ;AACA;AACA;AACA;AACA;AACA;AACIS,EAAAA,WAAW,CAACH,UAAD,EAAaC,OAAb,EAAsBH,gBAAtB,EAAwC;AAC/C,UAAME,UAAN,EAAkBC,OAAlB;AACA,SAAKH,gBAAL,GAAwBA,gBAAxB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACUM,EAAAA,WAAW,CAACC,OAAD,EAAU;AAAA;;AAAA;AACvBA,MAAAA,OAAO,CAACC,SAAR,GAAoB,KAAI,CAACR,gBAAL,CAAsBF,MAA1C;AACA,aAAO,KAAI,CAACW,WAAL,CAAiBH,WAAjB,CAA6BC,OAA7B,CAAP;AAFuB;AAG1B;;AArBkD,C,CAuBvD","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport const DefaultKeepAliveOptions = {\n    enable: true\n};\nexport function keepAlivePolicy(keepAliveOptions) {\n    return {\n        create: (nextPolicy, options) => {\n            return new KeepAlivePolicy(nextPolicy, options, keepAliveOptions || DefaultKeepAliveOptions);\n        }\n    };\n}\n/**\n * KeepAlivePolicy is a policy used to control keep alive settings for every request.\n */\nexport class KeepAlivePolicy extends BaseRequestPolicy {\n    /**\n     * Creates an instance of KeepAlivePolicy.\n     *\n     * @param nextPolicy -\n     * @param options -\n     * @param keepAliveOptions -\n     */\n    constructor(nextPolicy, options, keepAliveOptions) {\n        super(nextPolicy, options);\n        this.keepAliveOptions = keepAliveOptions;\n    }\n    /**\n     * Sends out request.\n     *\n     * @param request -\n     * @returns\n     */\n    async sendRequest(request) {\n        request.keepAlive = this.keepAliveOptions.enable;\n        return this._nextPolicy.sendRequest(request);\n    }\n}\n//# sourceMappingURL=keepAlivePolicy.js.map"]},"metadata":{},"sourceType":"module"}