{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/* eslint-disable-next-line @typescript-eslint/triple-slash-reference */\n/// <reference path=\"../dom-shim.d.ts\" />\nexport { WebResource } from \"./webResource\";\nexport { DefaultHttpClient } from \"./defaultHttpClient\";\nexport { HttpHeaders } from \"./httpHeaders\";\nexport { HttpPipelineLogLevel } from \"./httpPipelineLogLevel\";\nexport { RestError } from \"./restError\";\nexport { operationOptionsToRequestOptionsBase } from \"./operationOptions\";\nexport { ServiceClient, flattenResponse, createPipelineFromOptions } from \"./serviceClient\";\nexport { QueryCollectionFormat } from \"./queryCollectionFormat\";\nexport { Constants } from \"./util/constants\";\nexport { bearerTokenAuthenticationPolicy } from \"./policies/bearerTokenAuthenticationPolicy\";\nexport { logPolicy } from \"./policies/logPolicy\";\nexport { BaseRequestPolicy, RequestPolicyOptions } from \"./policies/requestPolicy\";\nexport { generateClientRequestIdPolicy } from \"./policies/generateClientRequestIdPolicy\";\nexport { exponentialRetryPolicy, RetryMode } from \"./policies/exponentialRetryPolicy\";\nexport { systemErrorRetryPolicy } from \"./policies/systemErrorRetryPolicy\";\nexport { throttlingRetryPolicy } from \"./policies/throttlingRetryPolicy\";\nexport { getDefaultProxySettings, proxyPolicy } from \"./policies/proxyPolicy\";\nexport { redirectPolicy } from \"./policies/redirectPolicy\";\nexport { keepAlivePolicy } from \"./policies/keepAlivePolicy\";\nexport { disableResponseDecompressionPolicy } from \"./policies/disableResponseDecompressionPolicy\";\nexport { signingPolicy } from \"./policies/signingPolicy\";\nexport { userAgentPolicy, getDefaultUserAgentValue } from \"./policies/userAgentPolicy\";\nexport { deserializationPolicy, deserializeResponseBody } from \"./policies/deserializationPolicy\";\nexport { tracingPolicy } from \"./policies/tracingPolicy\";\nexport { MapperType, Serializer, serializeObject } from \"./serializer\";\nexport { stripRequest, stripResponse, executePromisesSequentially, generateUuid, encodeUri, promiseToCallback, promiseToServiceCallback, isValidUuid, applyMixins, isNode, isDuration } from \"./util/utils\";\nexport { URLBuilder, URLQuery } from \"./url\";\nexport { delay } from \"./util/delay\"; // legacy exports. Use core-tracing instead (and remove on next major version update of core-http).\n\nexport { createSpanFunction } from \"./createSpanLegacy\"; // Credentials\n\nexport { isTokenCredential } from \"@azure/core-auth\";\nexport { ExpiringAccessTokenCache } from \"./credentials/accessTokenCache\";\nexport { AccessTokenRefresher } from \"./credentials/accessTokenRefresher\";\nexport { BasicAuthenticationCredentials } from \"./credentials/basicAuthenticationCredentials\";\nexport { ApiKeyCredentials } from \"./credentials/apiKeyCredentials\";\nexport { TopicCredentials } from \"./credentials/topicCredentials\";\nexport { parseXML, stringifyXML } from \"./util/xml\";\nexport { XML_ATTRKEY, XML_CHARKEY } from \"./util/serializer.common\";\nimport \"@azure/core-asynciterator-polyfill\"; //# sourceMappingURL=coreHttp.js.map","map":{"version":3,"sources":["F:/statvalu/AR_DocuExpert_Test/node_modules/@azure/core-http/dist-esm/src/coreHttp.js"],"names":["WebResource","DefaultHttpClient","HttpHeaders","HttpPipelineLogLevel","RestError","operationOptionsToRequestOptionsBase","ServiceClient","flattenResponse","createPipelineFromOptions","QueryCollectionFormat","Constants","bearerTokenAuthenticationPolicy","logPolicy","BaseRequestPolicy","RequestPolicyOptions","generateClientRequestIdPolicy","exponentialRetryPolicy","RetryMode","systemErrorRetryPolicy","throttlingRetryPolicy","getDefaultProxySettings","proxyPolicy","redirectPolicy","keepAlivePolicy","disableResponseDecompressionPolicy","signingPolicy","userAgentPolicy","getDefaultUserAgentValue","deserializationPolicy","deserializeResponseBody","tracingPolicy","MapperType","Serializer","serializeObject","stripRequest","stripResponse","executePromisesSequentially","generateUuid","encodeUri","promiseToCallback","promiseToServiceCallback","isValidUuid","applyMixins","isNode","isDuration","URLBuilder","URLQuery","delay","createSpanFunction","isTokenCredential","ExpiringAccessTokenCache","AccessTokenRefresher","BasicAuthenticationCredentials","ApiKeyCredentials","TopicCredentials","parseXML","stringifyXML","XML_ATTRKEY","XML_CHARKEY"],"mappings":"AAAA;AACA;;AACA;AACA;AACA,SAASA,WAAT,QAA4B,eAA5B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,oCAAT,QAAqD,oBAArD;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,yBAAzC,QAA0E,iBAA1E;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,+BAAT,QAAgD,4CAAhD;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAwD,0BAAxD;AACA,SAASC,6BAAT,QAA8C,0CAA9C;AACA,SAASC,sBAAT,EAAiCC,SAAjC,QAAkD,mCAAlD;AACA,SAASC,sBAAT,QAAuC,mCAAvC;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,SAASC,uBAAT,EAAkCC,WAAlC,QAAqD,wBAArD;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,kCAAT,QAAmD,+CAAnD;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,eAAT,EAA0BC,wBAA1B,QAA0D,4BAA1D;AACA,SAASC,qBAAT,EAAgCC,uBAAhC,QAA+D,kCAA/D;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,eAAjC,QAAwD,cAAxD;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,2BAAtC,EAAmEC,YAAnE,EAAiFC,SAAjF,EAA4FC,iBAA5F,EAA+GC,wBAA/G,EAAyIC,WAAzI,EAAsJC,WAAtJ,EAAmKC,MAAnK,EAA2KC,UAA3K,QAA6L,cAA7L;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,KAAT,QAAsB,cAAtB,C,CACA;;AACA,SAASC,kBAAT,QAAmC,oBAAnC,C,CACA;;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,wBAAT,QAAyC,gCAAzC;AACA,SAASC,oBAAT,QAAqC,oCAArC;AACA,SAASC,8BAAT,QAA+C,8CAA/C;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,YAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,0BAAzC;AACA,OAAO,oCAAP,C,CACA","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable-next-line @typescript-eslint/triple-slash-reference */\n/// <reference path=\"../dom-shim.d.ts\" />\nexport { WebResource } from \"./webResource\";\nexport { DefaultHttpClient } from \"./defaultHttpClient\";\nexport { HttpHeaders } from \"./httpHeaders\";\nexport { HttpPipelineLogLevel } from \"./httpPipelineLogLevel\";\nexport { RestError } from \"./restError\";\nexport { operationOptionsToRequestOptionsBase } from \"./operationOptions\";\nexport { ServiceClient, flattenResponse, createPipelineFromOptions } from \"./serviceClient\";\nexport { QueryCollectionFormat } from \"./queryCollectionFormat\";\nexport { Constants } from \"./util/constants\";\nexport { bearerTokenAuthenticationPolicy } from \"./policies/bearerTokenAuthenticationPolicy\";\nexport { logPolicy } from \"./policies/logPolicy\";\nexport { BaseRequestPolicy, RequestPolicyOptions } from \"./policies/requestPolicy\";\nexport { generateClientRequestIdPolicy } from \"./policies/generateClientRequestIdPolicy\";\nexport { exponentialRetryPolicy, RetryMode } from \"./policies/exponentialRetryPolicy\";\nexport { systemErrorRetryPolicy } from \"./policies/systemErrorRetryPolicy\";\nexport { throttlingRetryPolicy } from \"./policies/throttlingRetryPolicy\";\nexport { getDefaultProxySettings, proxyPolicy } from \"./policies/proxyPolicy\";\nexport { redirectPolicy } from \"./policies/redirectPolicy\";\nexport { keepAlivePolicy } from \"./policies/keepAlivePolicy\";\nexport { disableResponseDecompressionPolicy } from \"./policies/disableResponseDecompressionPolicy\";\nexport { signingPolicy } from \"./policies/signingPolicy\";\nexport { userAgentPolicy, getDefaultUserAgentValue } from \"./policies/userAgentPolicy\";\nexport { deserializationPolicy, deserializeResponseBody } from \"./policies/deserializationPolicy\";\nexport { tracingPolicy } from \"./policies/tracingPolicy\";\nexport { MapperType, Serializer, serializeObject } from \"./serializer\";\nexport { stripRequest, stripResponse, executePromisesSequentially, generateUuid, encodeUri, promiseToCallback, promiseToServiceCallback, isValidUuid, applyMixins, isNode, isDuration } from \"./util/utils\";\nexport { URLBuilder, URLQuery } from \"./url\";\nexport { delay } from \"./util/delay\";\n// legacy exports. Use core-tracing instead (and remove on next major version update of core-http).\nexport { createSpanFunction } from \"./createSpanLegacy\";\n// Credentials\nexport { isTokenCredential } from \"@azure/core-auth\";\nexport { ExpiringAccessTokenCache } from \"./credentials/accessTokenCache\";\nexport { AccessTokenRefresher } from \"./credentials/accessTokenRefresher\";\nexport { BasicAuthenticationCredentials } from \"./credentials/basicAuthenticationCredentials\";\nexport { ApiKeyCredentials } from \"./credentials/apiKeyCredentials\";\nexport { TopicCredentials } from \"./credentials/topicCredentials\";\nexport { parseXML, stringifyXML } from \"./util/xml\";\nexport { XML_ATTRKEY, XML_CHARKEY } from \"./util/serializer.common\";\nimport \"@azure/core-asynciterator-polyfill\";\n//# sourceMappingURL=coreHttp.js.map"]},"metadata":{},"sourceType":"module"}