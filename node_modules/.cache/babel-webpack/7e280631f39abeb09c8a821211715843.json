{"ast":null,"code":"import _asyncToGenerator from \"F:/statvalu/project/AR_DocuExpert_Test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { SpanStatusCode } from \"@azure/core-tracing\";\nimport { createSpan } from \"./utils/tracing\";\nexport class DataLakeLeaseClient {\n  constructor(client) {\n    this.client = client;\n  }\n\n  get leaseId() {\n    return this.client.leaseId;\n  }\n\n  get url() {\n    return this.client.url;\n  }\n\n  acquireLease(duration, options = {}) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      options.conditions = options.conditions || {};\n      const {\n        span,\n        updatedOptions\n      } = createSpan(\"DataLakeLeaseClient-acquireLease\", options);\n\n      try {\n        return yield _this.client.acquireLease(duration, updatedOptions);\n      } catch (e) {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: e.message\n        });\n        throw e;\n      } finally {\n        span.end();\n      }\n    })();\n  }\n\n  changeLease(proposedLeaseId, options = {}) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      options.conditions = options.conditions || {};\n      const {\n        span,\n        updatedOptions\n      } = createSpan(\"DataLakeLeaseClient-changeLease\", options);\n\n      try {\n        return yield _this2.client.changeLease(proposedLeaseId, updatedOptions);\n      } catch (e) {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: e.message\n        });\n        throw e;\n      } finally {\n        span.end();\n      }\n    })();\n  }\n\n  releaseLease(options = {}) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      options.conditions = options.conditions || {};\n      const {\n        span,\n        updatedOptions\n      } = createSpan(\"DataLakeLeaseClient-releaseLease\", options);\n\n      try {\n        return yield _this3.client.releaseLease(updatedOptions);\n      } catch (e) {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: e.message\n        });\n        throw e;\n      } finally {\n        span.end();\n      }\n    })();\n  }\n\n  renewLease(options = {}) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      options.conditions = options.conditions || {};\n      const {\n        span,\n        updatedOptions\n      } = createSpan(\"DataLakeLeaseClient-renewLease\", options);\n\n      try {\n        return yield _this4.client.renewLease(updatedOptions);\n      } catch (e) {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: e.message\n        });\n        throw e;\n      } finally {\n        span.end();\n      }\n    })();\n  }\n\n  breakLease(breakPeriod, options = {}) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      options.conditions = options.conditions || {};\n      const {\n        span,\n        updatedOptions\n      } = createSpan(\"DataLakeLeaseClient-renewLease\", options);\n\n      try {\n        return yield _this5.client.breakLease(breakPeriod, updatedOptions);\n      } catch (e) {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: e.message\n        });\n        throw e;\n      } finally {\n        span.end();\n      }\n    })();\n  }\n\n} //# sourceMappingURL=DataLakeLeaseClient.js.map","map":{"version":3,"sources":["F:/statvalu/project/AR_DocuExpert_Test/node_modules/@azure/storage-file-datalake/dist-esm/storage-file-datalake/src/DataLakeLeaseClient.js"],"names":["SpanStatusCode","createSpan","DataLakeLeaseClient","constructor","client","leaseId","url","acquireLease","duration","options","conditions","span","updatedOptions","e","setStatus","code","ERROR","message","end","changeLease","proposedLeaseId","releaseLease","renewLease","breakLease","breakPeriod"],"mappings":"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","sourcesContent":["import { SpanStatusCode } from \"@azure/core-tracing\";\nimport { createSpan } from \"./utils/tracing\";\nexport class DataLakeLeaseClient {\n    constructor(client) {\n        this.client = client;\n    }\n    get leaseId() {\n        return this.client.leaseId;\n    }\n    get url() {\n        return this.client.url;\n    }\n    async acquireLease(duration, options = {}) {\n        options.conditions = options.conditions || {};\n        const { span, updatedOptions } = createSpan(\"DataLakeLeaseClient-acquireLease\", options);\n        try {\n            return await this.client.acquireLease(duration, updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    async changeLease(proposedLeaseId, options = {}) {\n        options.conditions = options.conditions || {};\n        const { span, updatedOptions } = createSpan(\"DataLakeLeaseClient-changeLease\", options);\n        try {\n            return await this.client.changeLease(proposedLeaseId, updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    async releaseLease(options = {}) {\n        options.conditions = options.conditions || {};\n        const { span, updatedOptions } = createSpan(\"DataLakeLeaseClient-releaseLease\", options);\n        try {\n            return await this.client.releaseLease(updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    async renewLease(options = {}) {\n        options.conditions = options.conditions || {};\n        const { span, updatedOptions } = createSpan(\"DataLakeLeaseClient-renewLease\", options);\n        try {\n            return await this.client.renewLease(updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    async breakLease(breakPeriod, options = {}) {\n        options.conditions = options.conditions || {};\n        const { span, updatedOptions } = createSpan(\"DataLakeLeaseClient-renewLease\", options);\n        try {\n            return await this.client.breakLease(breakPeriod, updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n}\n//# sourceMappingURL=DataLakeLeaseClient.js.map"]},"metadata":{},"sourceType":"module"}