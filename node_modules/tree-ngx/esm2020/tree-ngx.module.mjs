import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { TreeNgxComponent } from './src/tree-ngx/tree-ngx.component';
import { NodeComponent } from './src//node/node.component';
import { TreeService } from './src//service/tree-service';
import { NodeNameComponent } from './src/node-name/node-name.component';
import { NodeIconWrapperComponent } from './src/node-icon-wrapper/node-icon-wrapper.component';
import * as i0 from "@angular/core";
export class TreeNgxModule {
}
TreeNgxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.2", ngImport: i0, type: TreeNgxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TreeNgxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.2", ngImport: i0, type: TreeNgxModule, declarations: [TreeNgxComponent,
        NodeComponent,
        NodeNameComponent,
        NodeIconWrapperComponent], imports: [CommonModule], exports: [TreeNgxComponent] });
TreeNgxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.2", ngImport: i0, type: TreeNgxModule, providers: [
        TreeService
    ], imports: [[
            CommonModule
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.2", ngImport: i0, type: TreeNgxModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule
                    ],
                    declarations: [
                        TreeNgxComponent,
                        NodeComponent,
                        NodeNameComponent,
                        NodeIconWrapperComponent,
                    ],
                    providers: [
                        TreeService
                    ],
                    exports: [
                        TreeNgxComponent
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1uZ3gubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2FwcC9tb2R1bGVzL3RyZWUtbmd4L3RyZWUtbmd4Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNyRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDM0QsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzFELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLHFEQUFxRCxDQUFDOztBQW1CL0YsTUFBTSxPQUFPLGFBQWE7OzBHQUFiLGFBQWE7MkdBQWIsYUFBYSxpQkFadEIsZ0JBQWdCO1FBQ2hCLGFBQWE7UUFDYixpQkFBaUI7UUFDakIsd0JBQXdCLGFBTnhCLFlBQVksYUFZWixnQkFBZ0I7MkdBR1AsYUFBYSxhQVBiO1FBQ1QsV0FBVztLQUNaLFlBWFE7WUFDUCxZQUFZO1NBQ2I7MkZBY1UsYUFBYTtrQkFqQnpCLFFBQVE7bUJBQUM7b0JBQ1IsT0FBTyxFQUFFO3dCQUNQLFlBQVk7cUJBQ2I7b0JBQ0QsWUFBWSxFQUFFO3dCQUNaLGdCQUFnQjt3QkFDaEIsYUFBYTt3QkFDYixpQkFBaUI7d0JBQ2pCLHdCQUF3QjtxQkFDekI7b0JBQ0QsU0FBUyxFQUFFO3dCQUNULFdBQVc7cUJBQ1o7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLGdCQUFnQjtxQkFDakI7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBUcmVlTmd4Q29tcG9uZW50IH0gZnJvbSAnLi9zcmMvdHJlZS1uZ3gvdHJlZS1uZ3guY29tcG9uZW50JztcclxuaW1wb3J0IHsgTm9kZUNvbXBvbmVudCB9IGZyb20gJy4vc3JjLy9ub2RlL25vZGUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVHJlZVNlcnZpY2UgfSBmcm9tICcuL3NyYy8vc2VydmljZS90cmVlLXNlcnZpY2UnO1xyXG5pbXBvcnQgeyBOb2RlTmFtZUNvbXBvbmVudCB9IGZyb20gJy4vc3JjL25vZGUtbmFtZS9ub2RlLW5hbWUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTm9kZUljb25XcmFwcGVyQ29tcG9uZW50IH0gZnJvbSAnLi9zcmMvbm9kZS1pY29uLXdyYXBwZXIvbm9kZS1pY29uLXdyYXBwZXIuY29tcG9uZW50JztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlXHJcbiAgXSxcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIFRyZWVOZ3hDb21wb25lbnQsXHJcbiAgICBOb2RlQ29tcG9uZW50LFxyXG4gICAgTm9kZU5hbWVDb21wb25lbnQsXHJcbiAgICBOb2RlSWNvbldyYXBwZXJDb21wb25lbnQsXHJcbiAgXSxcclxuICBwcm92aWRlcnM6IFtcclxuICAgIFRyZWVTZXJ2aWNlXHJcbiAgXSxcclxuICBleHBvcnRzOiBbXHJcbiAgICBUcmVlTmd4Q29tcG9uZW50XHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgVHJlZU5neE1vZHVsZSB7IH1cclxuIl19