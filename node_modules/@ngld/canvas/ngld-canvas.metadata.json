{"__symbolic":"module","version":4,"metadata":{"AnimationTranstion":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngld/transition","name":"TransitionService","line":26,"character":40},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":25,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor"}]}},"LinkedDataGraphicComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":65,"character":1},"arguments":[{"providers":[{"provide":{"__symbolic":"reference","module":"@ngld/transition","name":"TransitionService","line":67,"character":15},"useClass":{"__symbolic":"reference","name":"AnimationTranstion"}},[{"__symbolic":"reference","module":"@ngld/icon/plus.icon","name":"PLUS_ICON_PROVIDER","line":68,"character":5},{"__symbolic":"reference","module":"@ngld/icon/remove.icon","name":"REMOVE_ICON_PROVIDER","line":68,"character":25},{"__symbolic":"reference","module":"@ngld/icon/unlock.icon","name":"UNLOCK_ICON_PROVIDER","line":68,"character":47}],{"__symbolic":"reference","module":"@ngld/icon","name":"SvgIconRegistry","line":69,"character":4}],"selector":"ngld-canvas","template":"<svg #mainCanvas ngldPanZoom class=\"neo4jd3-graph mainCanvas\"\n    [attr.viewBox]=\"canvasViewBox.minX\n                  + ' ' + canvasViewBox.minY\n                  + ' ' + canvasViewBox.width\n                  + ' ' + canvasViewBox.height\"\n    [viewBox]=\"canvasViewBox\"\n    (click)=\"clearDashedArrow($event)\"\n    (viewBoxChanged)=\"updateViewBox($event)\">\n  <g class=\"relationships\">\n    <g *ngFor=\"let rel of d3Graph.relationships\" class=\"relationship\"\n      [attr.transform]=\"'translate(' + rel.source.x + ',' + rel.source.y\n                        +') rotate(' + rel.rotate + ')'\"\n      (click)=\"$states.relationRemove ? removeRelation($event, rel) : null\">\n      <text ngldBoxSizeListener [listenValue]=\"rel.pathDrawn.A1.x\"\n        (boxSize)=\"rel.textBoxSize=$event\"\n        class=\"text\" fill=\"#000000\" font-size=\"8px\" pointer-events=\"none\"\n        text-anchor=\"middle\"\n        [attr.transform]=\"'translate('\n            + rel.textTranslate.x + ',' + rel.textTranslate.y\n            + ') rotate('\n              + ((rel.rotate > 90 && rel.rotate < 270 )? 180:0)\n            + ')'\">\n        {{ rel.type }}\n      </text>\n      <path class=\"outline\" fill=\"#a5abb6\" stroke=\"none\"\n          [attr.d]=\"'M ' + rel.pathDrawn.A1.x + ' ' + rel.pathDrawn.A1.y\n          + ' L ' + rel.pathDrawn.B1.x + ' ' + rel.pathDrawn.B1.y\n          + ' L ' + rel.pathDrawn.C1.x + ' ' + rel.pathDrawn.C1.y\n          + ' L ' + rel.pathDrawn.D1.x + ' ' + rel.pathDrawn.D1.y\n          + ' Z'\n          + ' M ' + rel.pathDrawn.A2.x + ' ' + rel.pathDrawn.A2.y\n          + ' L ' + rel.pathDrawn.B2.x + ' ' + rel.pathDrawn.B2.y\n          + ' L ' + rel.pathDrawn.C2.x + ' ' + rel.pathDrawn.C2.y\n          + ' L ' + rel.pathDrawn.D2.x + ' ' + rel.pathDrawn.D2.y\n          + ' L ' + rel.pathDrawn.E2.x + ' ' + rel.pathDrawn.E2.y\n          + ' L ' + rel.pathDrawn.F2.x + ' ' + rel.pathDrawn.F2.y\n          + ' L ' + rel.pathDrawn.G2.x + ' ' + rel.pathDrawn.G2.y\n          + ' Z'\"></path>\n      <path class=\"overlay\"\n          [attr.d]=\"'M ' + rel.pathDrawn.A3.x + ' ' + rel.pathDrawn.A3.y\n          + ' L ' + rel.pathDrawn.B3.x + ' ' + rel.pathDrawn.B3.y\n          + ' L ' + rel.pathDrawn.C3.x + ' ' + rel.pathDrawn.C3.y\n          + ' L ' + rel.pathDrawn.D3.x + ' ' + rel.pathDrawn.D3.y\n          + ' Z'\"></path>\n    </g>\n  </g>\n  <g class=\"nodes\">\n    <g cdkDrag ngldLongPress ngldPanZoomExclude\n      *ngFor=\"let node of d3Graph.nodes\" class=\"node\" [class.selected]=\"node.selected\"\n      [class.node-highlighted]=\"highlightChecker(node)\"\n      [cdkDragFreeDragPosition]=\"{ x: node.translate.x, y: node.translate.y }\"\n      (cdkDragStarted)=\"onNodeDragStart(node);node.controlledByDragging=true\"\n      (cdkDragEnded)=\"onNodeDragEnd($event, node)\"\n      (cdkDragMoved)=\"onNodeDragging($event, node)\"\n      (longPressing)=\"onNodeDragStart(node);node.isLongPressing=true;node.fx=node.x;node.fy=node.y\"\n      (click)=\"($states.dashedArrow && $states.dashedArrow.id) ? plusDashedArrow($event) : onNodeClick($event, node)\"\n      (mouseenter)=\"$states.dashedArrow ? updateDashedArrowTarget(node) : updateActiveIndividual(node)\"\n      (mouseleave)=\"$states.dashedArrow ? updateDashedArrowTarget(null) : clearActiveIndividual()\">\n      <circle class=\"ring\" [attr.r]=\"nodeRadius * 1.16\">\n        <title> {{ node.labels[0] }} [{{node.id}}] </title>\n      </circle>\n      <circle class=\"outline\" [attr.r]=\"nodeRadius\" [attr.fill]=\"node.color.fill\" [attr.stroke]=\"node.color.stroke\">\n        <title> {{ node.labels[0] }} [{{node.id}}]  </title>\n      </circle>\n      <text class=\"text\" fill=\"#ffffff\" pointer-events=\"none\" y=\"4px\">\n        {{ node.labels.join(' ') }}</text>\n      <ng-container *ngIf=\"node.selected\">\n        <path *ngFor=\"let panelRotate of [0,120,240]\" class=\"context-menu-item\"\n             (click)=\"updateDashedArrowSource(node)\"\n              [attr.transform]=\"'rotate(' + panelRotate + ')'\"\n              [attr.d]=\"'M ' + node.pathDrawn.D1.x + ' ' + node.pathDrawn.D1.y\n                    + ' A ' + node.pathDrawn.R1.outer + ' ' + node.pathDrawn.R1.outer + ' 0 0,1 ' + node.pathDrawn.C1.x + ' ' + node.pathDrawn.C1.y\n                    + ' L ' + node.pathDrawn.B1.x + ' ' + node.pathDrawn.B1.y\n                    + ' A 33 33 0 0,0 ' + node.pathDrawn.A1.x + ' ' + node.pathDrawn.A1.y\n                    + ' Z'\"></path>\n        <g ngld-icon svgIcon=\"unlock_node\" transform=\"translate(-52,-30) scale(0.7)\" color=\"#2A2C34\"></g>\n        <g ngld-icon svgIcon=\"remove_node\" transform=\"translate(33,-24) scale(0.7)\" color=\"#2A2C34\"></g>\n        <g ngld-icon svgIcon=\"plus_node\"\n          (click)=\"updateDashedArrowSource(node)\"\n          transform=\"translate(-8,38) scale(0.7)\" color=\"#2A2C34\"></g>\n      </ng-container>\n    </g>\n  </g>\n\n  <ng-container *ngIf=\"$states.debug\">\n    <path *ngFor=\"let node of d3Graph.nodes\" class=\"outline\" stroke=\"green\" stroke-width=\"1\"\n            [attr.d]=\"'M 0 0 '\n            + ' L ' + node.x + ' ' + node.y\n            + ' Z'\"></path>\n  </ng-container>\n</svg>\n","styles":["svg.mainCanvas{border:1px solid #ddd;border-radius:5px;width:100%;height:100%;cursor:move}path.context-menu-item{stroke-width:2px;fill:#d2d5da;cursor:pointer}path.context-menu-item:hover{fill:#b9b9b9}.node{touch-action:none;-webkit-tap-highlight-color:#fff}.node.node-highlighted .ring{-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\";filter:alpha(opacity=50);opacity:.5;stroke:#888;stroke-width:12px}.node .outline{cursor:pointer;pointer-events:all;stroke-width:2px}.node .ring{fill:none;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0);opacity:0;stroke:#6ac6ff;stroke-width:8px}.node .text{font-size:10px;text-anchor:middle}.node .text.icon{font-family:FontAwesome}.node:hover .ring{-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=30)\";filter:alpha(opacity=30);opacity:.3}.node.selected .ring{stroke:#fdcc59;opacity:.4}.relationship{cursor:default}.relationship line{stroke:#aaa}.relationship .outline{cursor:default}.relationship .overlay{cursor:default;fill:#6ac6ff;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0);opacity:0}.relationship text{cursor:default}.relationship:hover .overlay{-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=30)\";filter:alpha(opacity=30);opacity:.3}\n"]}]}],"members":{"mainCanvas":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":77,"character":3},"arguments":["mainCanvas",{"static":true}]}]}],"nodeRadius":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":80,"character":3}}]}],"arrowSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":81,"character":3}}]}],"minCollision":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":82,"character":3}}]}],"zoomFit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":83,"character":3}}]}],"debug":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":84,"character":3}}]}],"graph":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":87,"character":3}}]}],"relationRemove":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":90,"character":3}}]}],"graphUpdated":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":94,"character":3}}]}],"highlightChecker":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":115,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":119,"character":5}}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":120,"character":5}}]],"parameters":[{"__symbolic":"reference","module":"@ngld/transition","name":"TransitionService","line":118,"character":31},{"__symbolic":"reference","name":"ColorProviderService"},{"__symbolic":"reference","name":"ActiveIndividualStoreService"}]}],"ngOnInit":[{"__symbolic":"method"}],"getMainCanvasSize":[{"__symbolic":"method"}],"newSimulation":[{"__symbolic":"method"}],"reloadSimulation":[{"__symbolic":"method"}],"zoomSvgScale":[{"__symbolic":"method"}],"onNodeDragging":[{"__symbolic":"method"}],"onNodeDragStart":[{"__symbolic":"method"}],"onNodeDragEnd":[{"__symbolic":"method"}],"onNodeClick":[{"__symbolic":"method"}],"updateDashedArrowSource":[{"__symbolic":"method"}],"updateDashedArrowTarget":[{"__symbolic":"method"}],"clearDashedArrow":[{"__symbolic":"method"}],"plusDashedArrow":[{"__symbolic":"method"}],"addNode":[{"__symbolic":"method"}],"updateActiveIndividual":[{"__symbolic":"method"}],"clearActiveIndividual":[{"__symbolic":"method"}],"updateViewBox":[{"__symbolic":"method"}],"removeRelation":[{"__symbolic":"method"}]}},"LinkedDataGraphicModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":10,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"LinkedDataGraphicComponent"},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"InfoPanelComponent"}],"imports":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"BrowserModule","line":17,"character":4},{"__symbolic":"reference","module":"@angular/cdk/drag-drop","name":"DragDropModule","line":17,"character":19},{"__symbolic":"reference","module":"@ngld/pan-zoom","name":"PanZoomDirectiveModule","line":17,"character":35},{"__symbolic":"reference","module":"@ngld/icon","name":"SvgIconModule","line":18,"character":4}],"exports":[{"__symbolic":"reference","name":"LinkedDataGraphicComponent"},{"__symbolic":"reference","name":"InfoPanelComponent"}]}]}],"members":{}},"SimpleGraph":{"__symbolic":"interface"},"ColorProviderService":{"__symbolic":"class","members":{"nextColor":[{"__symbolic":"method"}],"nextColorByName":[{"__symbolic":"method"}]}},"DefaultColorProviderService":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ColorProviderService"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":8,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"nextColor":[{"__symbolic":"method"}],"nextColorByName":[{"__symbolic":"method"}]}},"InfoPanelComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"ngld-info-panel","template":"<div *ngIf=\"activeIndividualStore.activeIndividual$ | async as active;\">\n  <ng-container *ngTemplateOutlet=\"infoPanel; context: {data: active}\"></ng-container>\n</div>\n\n\n<ng-template #infoPanel let-data='data'>\n  <a href=\"#\" class=\"class\" [style.backgroundColor]=\"colorGetter.nextColorByName(data.labels[0])\">\n    <strong> {{ data.labels || data.type }} </strong>\n  </a>\n  <a href=\"#\" class=\"property\">\n    <strong> {{ data.id }} </strong>\n  </a>\n</ng-template>\n","styles":[":host{font-size:16px;padding:10px}a{border:1px solid;display:inline-block;font-size:14px;line-height:1.428571429;margin-left:5px;margin-top:5px;padding:6px 12px}a.class{color:#fff}a.property{background-color:#fff;border-color:#ccc;color:#333}a.btn{margin-left:5px;margin-top:5px;opacity:1}a.info{background-color:#a5abb6;border:1px solid #9aa1ac;color:#fff}\n"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ActiveIndividualStoreService"},{"__symbolic":"reference","name":"ColorProviderService"}]}]}},"ActiveIndividualStoreService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":5,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"clearActiveIndividual":[{"__symbolic":"method"}]}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":2,"character":1},"arguments":[{"selector":"[ngldBoxSizeListener]"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":8,"character":16}]}],"listenValue":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"boxSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":14,"character":3}}]}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":8,"character":1},"arguments":[{"selector":"[ngldLongPress]"}]}],"members":{"longPress":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":17,"character":3}}]}],"longPressing":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":19,"character":3}}]}],"clsPress":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":21,"character":3},"arguments":["class.press"]}]}],"clsLongPress":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":24,"character":3},"arguments":["class.longpress"]}]}],"onMouseDown":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":27,"character":3},"arguments":["touchstart",["$event"]]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":28,"character":3},"arguments":["mousedown",["$event"]]}]}],"endPress":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":41,"character":3},"arguments":["touchend"]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":42,"character":3},"arguments":["mouseup"]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":43,"character":3},"arguments":["mouseleave"]}]}]}}},"origins":{"AnimationTranstion":"./lib/canvas.component","LinkedDataGraphicComponent":"./lib/canvas.component","LinkedDataGraphicModule":"./lib/linked-data-graphic.module","SimpleGraph":"./lib/data-interface","ColorProviderService":"./lib/color-provider.service","DefaultColorProviderService":"./lib/color-provider.service","InfoPanelComponent":"./lib/info-panel-component/info-panel.component","ActiveIndividualStoreService":"./lib/active-individual-store.service","ɵa":"./lib/box-size-listener.directive","ɵb":"./lib/long-press.directive"},"importAs":"@ngld/canvas"}