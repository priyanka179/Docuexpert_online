import { RGBColor } from 'd3-color';
import { D3Node } from './data-interface';
export declare const COLORS: string[];
export declare function darkenColor(color: string): RGBColor;
/**
 * @returns degree of rotation
 */
export declare function rotation(source: D3Node, target: D3Node): number;
/**
 * Get the vector perpendicular to the given vector.
 *
 * @export
 */
export declare function unitaryNormalVector(source: D3Node, target: D3Node, newLength?: number): {
    x: number;
    y: number;
};
export declare function unitaryVector(source: D3Node, target: D3Node, newLength?: number): {
    x: number;
    y: number;
};
/**
 * Clockwise Rotate the given point on Cartesian coordinate system.
 */
export declare function rotatePoint(center: {
    x: number;
    y: number;
}, pointToRotate: {
    x: number;
    y: number;
}, angle: number): {
    x: number;
    y: number;
};
/**
 * Fonts awesome icons
 * @returns string
 * @remove
 */
export declare function fontAwesomeIcons(): {
    [name: string]: string;
};
