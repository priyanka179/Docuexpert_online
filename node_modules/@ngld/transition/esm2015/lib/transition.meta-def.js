import { Transition } from './transition.class';
import { Trigger } from './trigger.class';
export function trigger(name, definition) {
    const result = new Trigger(name);
    definition.forEach(def => def(result));
    return result;
}
export function transition(stateChangeExpr, steps) {
    const transResult = new Transition(stateChangeExpr);
    steps.forEach(stepDef => stepDef(transResult));
    return (trig) => {
        trig.transitions.push(transResult);
    };
}
export function render(state) {
    return (trans) => {
        trans.steps.push(state);
    };
}
export function animate(duration, easing) {
    return (trans) => {
        trans.duration = duration;
        trans.easing = easing;
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNpdGlvbi5tZXRhLWRlZi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvdHJhbnNpdGlvbi5tZXRhLWRlZi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFaEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBSzFDLE1BQU0sVUFBVSxPQUFPLENBQUMsSUFBWSxFQUFFLFVBQStCO0lBQ25FLE1BQU0sTUFBTSxHQUFHLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2pDLFVBQVUsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUN2QyxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBRUQsTUFBTSxVQUFVLFVBQVUsQ0FDeEIsZUFBbUUsRUFDbkUsS0FBMkI7SUFDM0IsTUFBTSxXQUFXLEdBQUcsSUFBSSxVQUFVLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDcEQsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO0lBQy9DLE9BQU8sQ0FBQyxJQUFhLEVBQUUsRUFBRTtRQUN2QixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNyQyxDQUFDLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxVQUFVLE1BQU0sQ0FBSSxLQUFxQjtJQUM3QyxPQUFPLENBQUMsS0FBaUIsRUFBRSxFQUFFO1FBQzNCLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzFCLENBQUMsQ0FBQztBQUNKLENBQUM7QUFFRCxNQUFNLFVBQVUsT0FBTyxDQUFDLFFBQWdCLEVBQUUsTUFBa0I7SUFDMUQsT0FBTyxDQUFDLEtBQWlCLEVBQUUsRUFBRTtRQUMzQixLQUFLLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUMxQixLQUFLLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztJQUN4QixDQUFDLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHJhbnNpdGlvbiB9IGZyb20gJy4vdHJhbnNpdGlvbi5jbGFzcyc7XG5pbXBvcnQgeyBSZW5kZXJTdGF0ZSwgRWFzaW5nRnVuYyB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHsgVHJpZ2dlciB9IGZyb20gJy4vdHJpZ2dlci5jbGFzcyc7XG5cbnR5cGUgQW5pbWF0aW9uTWV0YWRhdGEgPSAodHJpZzogVHJpZ2dlcikgPT4gdm9pZDtcbnR5cGUgVHJhbnNpdGlvbk1ldGFkYXRhID0gKHRyYW5zaXRpb246IFRyYW5zaXRpb24pID0+IHZvaWQ7XG5cbmV4cG9ydCBmdW5jdGlvbiB0cmlnZ2VyKG5hbWU6IHN0cmluZywgZGVmaW5pdGlvbjogQW5pbWF0aW9uTWV0YWRhdGFbXSk6IFRyaWdnZXIge1xuICBjb25zdCByZXN1bHQgPSBuZXcgVHJpZ2dlcihuYW1lKTtcbiAgZGVmaW5pdGlvbi5mb3JFYWNoKGRlZiA9PiBkZWYocmVzdWx0KSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2l0aW9uKFxuICBzdGF0ZUNoYW5nZUV4cHI6ICgoZnJvbXRTdGF0ZTogc3RyaW5nLCB0b1N0YXRlOiBzdHJpbmcpID0+IGJvb2xlYW4pLFxuICBzdGVwczogVHJhbnNpdGlvbk1ldGFkYXRhW10pOiBBbmltYXRpb25NZXRhZGF0YSB7XG4gIGNvbnN0IHRyYW5zUmVzdWx0ID0gbmV3IFRyYW5zaXRpb24oc3RhdGVDaGFuZ2VFeHByKTtcbiAgc3RlcHMuZm9yRWFjaChzdGVwRGVmID0+IHN0ZXBEZWYodHJhbnNSZXN1bHQpKTtcbiAgcmV0dXJuICh0cmlnOiBUcmlnZ2VyKSA9PiB7XG4gICAgdHJpZy50cmFuc2l0aW9ucy5wdXNoKHRyYW5zUmVzdWx0KTtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcjxUPihzdGF0ZTogUmVuZGVyU3RhdGU8VD4pOiBUcmFuc2l0aW9uTWV0YWRhdGEge1xuICByZXR1cm4gKHRyYW5zOiBUcmFuc2l0aW9uKSA9PiB7XG4gICAgdHJhbnMuc3RlcHMucHVzaChzdGF0ZSk7XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhbmltYXRlKGR1cmF0aW9uOiBudW1iZXIsIGVhc2luZzogRWFzaW5nRnVuYyk6IFRyYW5zaXRpb25NZXRhZGF0YSB7XG4gIHJldHVybiAodHJhbnM6IFRyYW5zaXRpb24pID0+IHtcbiAgICB0cmFucy5kdXJhdGlvbiA9IGR1cmF0aW9uO1xuICAgIHRyYW5zLmVhc2luZyA9IGVhc2luZztcbiAgfTtcbn1cbiJdfQ==