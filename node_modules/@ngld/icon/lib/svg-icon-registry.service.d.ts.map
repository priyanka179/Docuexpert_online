{"version":3,"file":"svg-icon-registry.service.d.ts","sources":["svg-icon-registry.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { ErrorHandler, InjectionToken, ValueProvider } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Observable } from 'rxjs';\nexport declare const SVG_ICONS: InjectionToken<SvgIconInfo[]>;\nexport interface SvgIconInfoProvider extends ValueProvider {\n    useValue: SvgIconInfo;\n}\nexport interface SvgIconInfo {\n    namespace?: string;\n    name: string;\n    svgSource: string;\n}\n/**\n * An exception to be thrown when the consumer attempts to use `<ngld-icon>`\n * without including @angular/common/http.\n */\nexport declare class SvgIconNoHttpProviderError extends Error {\n    constructor();\n}\n/**\n * https://github.com/angular/angular/blob/f8096d499324cf0961f092944bbaedd05364eea1/aio/src/app/shared/custom-icon-registry.ts\n */\nexport declare class SvgIconRegistry extends MatIconRegistry {\n    private http;\n    private svgIcons;\n    private cachedSvgElements;\n    constructor(http: HttpClient, sanitizer: DomSanitizer, document: any, errorHandler: ErrorHandler, svgIcons: SvgIconInfo[]);\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element)\n     * with the given name and namespace.\n     * The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the observable will throw an error.\n     */\n    getNamedSvgIcon(iconName: string, namespace?: string): Observable<SVGElement>;\n    private loadSvgElement;\n}\n"]}