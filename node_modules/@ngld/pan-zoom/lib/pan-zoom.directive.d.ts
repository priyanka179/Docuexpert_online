import { ElementRef, OnInit, OnDestroy, EventEmitter } from '@angular/core';
import { PanZoomExcludeDirective } from './pan-zoom-exclude.directive';
import * as ɵngcc0 from '@angular/core';
export declare class PanZoomDirective implements OnInit, OnDestroy {
    private el;
    private pointerOrigin;
    private isPointerDown;
    private boundingSize?;
    private previousViewBox?;
    private excludeChildrenElements;
    private document;
    viewBox: {
        minX: number;
        minY: number;
        width: number;
        height: number;
    };
    scaleFactor: number;
    viewBoxChanged: EventEmitter<{
        minX: number;
        minY: number;
        width: number;
        height: number;
    }>;
    constructor(el: ElementRef<SVGSVGElement>, $document: any);
    ngOnInit(): void;
    ngOnDestroy(): void;
    /**
     * excludeChild
     */
    excludeChild(component: PanZoomExcludeDirective): void;
    /**
     * onExcludeDestroyed
     */
    onExcludeDestroyed(component: PanZoomExcludeDirective): void;
    private pointerDownListener;
    private pointerUpListener;
    private pointerMoveListener;
    onZoom(e: WheelEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<PanZoomDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<PanZoomDirective, "[ngldPanZoom]", never, { "viewBox": "viewBox"; "scaleFactor": "scaleFactor"; }, { "viewBoxChanged": "viewBoxChanged"; }, never>;
}

//# sourceMappingURL=pan-zoom.directive.d.ts.map