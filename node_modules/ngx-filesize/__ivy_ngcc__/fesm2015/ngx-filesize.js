import { Pipe, NgModule } from '@angular/core';
import * as filesize_ from 'filesize';

/**
 * @fileoverview added by tsickle
 * Generated from: lib/filesize.pipe.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as ɵngcc0 from '@angular/core';
class FileSizePipe {
    /**
     * @private
     * @param {?} value
     * @param {?=} options
     * @return {?}
     */
    static transformOne(value, options) {
        /** @type {?} */
        const filesize = filesize_;
        return filesize(value, options);
    }
    /**
     * @param {?} value
     * @param {?=} options
     * @return {?}
     */
    transform(value, options) {
        if (Array.isArray(value)) {
            return value.map((/**
             * @param {?} val
             * @return {?}
             */
            val => FileSizePipe.transformOne(val, options)));
        }
        return FileSizePipe.transformOne(value, options);
    }
}
FileSizePipe.ɵfac = function FileSizePipe_Factory(t) { return new (t || FileSizePipe)(); };
FileSizePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: "filesize", type: FileSizePipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FileSizePipe, [{
        type: Pipe,
        args: [{
                name: 'filesize'
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * Generated from: lib/ngx-filesize.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgxFilesizeModule {
}
NgxFilesizeModule.ɵfac = function NgxFilesizeModule_Factory(t) { return new (t || NgxFilesizeModule)(); };
NgxFilesizeModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxFilesizeModule });
NgxFilesizeModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxFilesizeModule, [{
        type: NgModule,
        args: [{
                declarations: [FileSizePipe],
                exports: [FileSizePipe]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxFilesizeModule, { declarations: [FileSizePipe], exports: [FileSizePipe] }); })();

/**
 * @fileoverview added by tsickle
 * Generated from: public-api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: ngx-filesize.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { FileSizePipe, NgxFilesizeModule };

//# sourceMappingURL=ngx-filesize.js.map