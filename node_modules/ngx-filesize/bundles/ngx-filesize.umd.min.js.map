{"version":3,"sources":["../../../projects/ngx-filesize/src/lib/filesize.pipe.ts","../../../projects/ngx-filesize/src/lib/ngx-filesize.module.ts"],"names":["FileSizePipe","transformOne","value","options","filesize_","prototype","transform","Array","isArray","map","val","Pipe","args","name","NgModule","declarations","exports"],"mappings":"+UAMA,SAAAA,YACiBA,EAAAC,aAAP,SAAoBC,EAAeC,GAEzC,OADiBC,EACDF,EAAOC,IAGzBH,EAAAK,UAAAC,UAAA,SAAUJ,EAA0BC,GAClC,OAAII,MAAMC,QAAQN,GACTA,EAAMO,KAAG,SAACC,GAAO,OAAAV,EAAaC,aAAaS,EAAKP,MAGlDH,EAAaC,aAAaC,EAAOC,6BAd3CQ,EAAAA,KAAIC,KAAA,CAAC,CACJC,KAAM,qBCKR,iCAJCC,EAAAA,SAAQF,KAAA,CAAC,CACRG,aAAc,CAACf,GACfgB,QAAS,CAAChB","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport * as filesize_ from 'filesize';\n\n@Pipe({\n  name: 'filesize'\n})\nexport class FileSizePipe implements PipeTransform {\n  private static transformOne(value: number, options?: any): string {\n    const filesize = filesize_;\n    return filesize(value, options);\n  }\n\n  transform(value: number | number[], options?: any) {\n    if (Array.isArray(value)) {\n      return value.map(val => FileSizePipe.transformOne(val, options));\n    }\n\n    return FileSizePipe.transformOne(value, options);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FileSizePipe } from './filesize.pipe';\n\n\n\n@NgModule({\n  declarations: [FileSizePipe],\n  exports: [FileSizePipe]\n})\nexport class NgxFilesizeModule { }\n"]}