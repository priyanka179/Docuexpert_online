(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('filesize')) :
    typeof define === 'function' && define.amd ? define('ngx-filesize', ['exports', '@angular/core', 'filesize'], factory) :
    (global = global || self, factory(global['ngx-filesize'] = {}, global.ng.core, global.filesize_));
}(this, (function (exports, core, filesize_) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/filesize.pipe.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FileSizePipe = /** @class */ (function () {
        function FileSizePipe() {
        }
        /**
         * @private
         * @param {?} value
         * @param {?=} options
         * @return {?}
         */
        FileSizePipe.transformOne = function (value, options) {
            /** @type {?} */
            var filesize = filesize_;
            return filesize(value, options);
        };
        /**
         * @param {?} value
         * @param {?=} options
         * @return {?}
         */
        FileSizePipe.prototype.transform = function (value, options) {
            if (Array.isArray(value)) {
                return value.map(( /**
                 * @param {?} val
                 * @return {?}
                 */function (/**
                 * @param {?} val
                 * @return {?}
                 */ val) { return FileSizePipe.transformOne(val, options); }));
            }
            return FileSizePipe.transformOne(value, options);
        };
        return FileSizePipe;
    }());
    FileSizePipe.decorators = [
        { type: core.Pipe, args: [{
                    name: 'filesize'
                },] }
    ];

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/ngx-filesize.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxFilesizeModule = /** @class */ (function () {
        function NgxFilesizeModule() {
        }
        return NgxFilesizeModule;
    }());
    NgxFilesizeModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [FileSizePipe],
                    exports: [FileSizePipe]
                },] }
    ];

    /**
     * @fileoverview added by tsickle
     * Generated from: public-api.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * Generated from: ngx-filesize.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.FileSizePipe = FileSizePipe;
    exports.NgxFilesizeModule = NgxFilesizeModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-filesize.umd.js.map
